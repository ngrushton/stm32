ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB141:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** 
  20:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  21:Src/main.c    **** #include "main.h"
  22:Src/main.c    **** #include "system_jump.h"
  23:Src/main.c    **** #include "MetaDataManager.h"
  24:Src/main.c    **** #include <stdio.h>
  25:Src/main.c    **** 
  26:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  27:Src/main.c    **** UART_HandleTypeDef huart2;
  28:Src/main.c    **** 
  29:Src/main.c    **** uint8_t  NodeName[8];
  30:Src/main.c    **** uint8_t  APIToken[32];
  31:Src/main.c    **** uint32_t ActiveApp;
  32:Src/main.c    **** 
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 2


  33:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  34:Src/main.c    **** void SystemClock_Config(void);
  35:Src/main.c    **** static void MX_GPIO_Init(void);
  36:Src/main.c    **** static void MX_USART2_UART_Init(void);
  37:Src/main.c    **** unsigned char ReCallActiveAppAddrFromMemory(void);
  38:Src/main.c    **** unsigned char SaveActiveApp(uint32_t address);
  39:Src/main.c    **** unsigned char SaveNodeName(char *data);
  40:Src/main.c    **** uint64_t ReadActiveAppAddress();
  41:Src/main.c    **** void SaveActiveAppAddress(uint64_t activeAppAddress);
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Table with All the known Meta Data */
  44:Src/main.c    **** MDM_knownGMD_t known_MetaData[]={
  45:Src/main.c    ****   {GMD_NODE_NAME,      (sizeof(NodeName))},
  46:Src/main.c    ****   {GMD_API_TOKEN,    (sizeof(APIToken))},
  47:Src/main.c    ****   {GMD_ACTIVE_APP,    (sizeof(ActiveApp))},
  48:Src/main.c    ****   {GMD_END    ,0}/* THIS MUST BE THE LAST ONE */
  49:Src/main.c    **** };
  50:Src/main.c    **** 
  51:Src/main.c    **** #define PROG1_ADDRESS ((uint32_t)0x08008000)
  52:Src/main.c    **** // #define PROG1_ADDRESS ((uint32_t)0x08080000)
  53:Src/main.c    **** 
  54:Src/main.c    **** /**
  55:Src/main.c    ****   * @brief  The application entry point.
  56:Src/main.c    ****   * @retval int
  57:Src/main.c    ****   */
  58:Src/main.c    **** int main(void)
  59:Src/main.c    **** {
  60:Src/main.c    ****   HAL_Init();
  61:Src/main.c    ****   SystemClock_Config();
  62:Src/main.c    ****   MX_GPIO_Init();
  63:Src/main.c    ****   MX_USART2_UART_Init();
  64:Src/main.c    **** 
  65:Src/main.c    ****   SCB->VTOR = 0x08000000;
  66:Src/main.c    **** 	__enable_irq();
  67:Src/main.c    **** 
  68:Src/main.c    ****   // InitMetaDataManager((void *)&known_MetaData, MDM_DATA_TYPE_GMD, NULL);
  69:Src/main.c    **** 
  70:Src/main.c    ****   // unsigned char success = ReCallActiveAppAddrFromMemory();
  71:Src/main.c    **** 
  72:Src/main.c    ****   // SaveActiveApp(0x08000000);
  73:Src/main.c    ****   // SaveNodeName("TestTest");
  74:Src/main.c    **** 
  75:Src/main.c    ****   // if (NecessityToSaveMetaDataManager) {
  76:Src/main.c    ****   //   uint32_t Success = EraseMetaDataManager();
  77:Src/main.c    ****   //   // if(Success) {
  78:Src/main.c    ****   //   //   SaveMetaDataManager();
  79:Src/main.c    ****   //   // }
  80:Src/main.c    ****   // }
  81:Src/main.c    **** 
  82:Src/main.c    ****   // if (success) {
  83:Src/main.c    ****   //   SystemAppJump(ActiveApp);
  84:Src/main.c    ****   // }
  85:Src/main.c    **** 
  86:Src/main.c    ****   // EraseMetaDataManager();
  87:Src/main.c    ****   // SaveActiveAppAddress(0x08008000);
  88:Src/main.c    ****   // SaveActiveAppAddress(0x08080000);
  89:Src/main.c    ****   HAL_UART_Transmit(&huart2, (uint8_t*)"In bootloader...\r\n", 18, 1000);
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 3


  90:Src/main.c    ****   uint64_t activeAppAddress = ReadActiveAppAddress();
  91:Src/main.c    ****   SystemAppJump(activeAppAddress);
  92:Src/main.c    **** }
  93:Src/main.c    **** 
  94:Src/main.c    **** /**
  95:Src/main.c    ****   * @brief  ReCallActiveAppAddrFromMemory
  96:Src/main.c    ****   *         Use the MetaDataManager functions to retrieve the active app address
  97:Src/main.c    ****   * @retval unsigned char: Success (1) from MetaDataManager recall
  98:Src/main.c    ****   */
  99:Src/main.c    **** unsigned char ReCallActiveAppAddrFromMemory(void) {
 100:Src/main.c    ****     unsigned char Success = 0;
 101:Src/main.c    **** 
 102:Src/main.c    ****     /* Recall the node name Credential saved */
 103:Src/main.c    ****     Success = MDM_ReCallGMD(GMD_ACTIVE_APP,(void *)&ActiveApp);
 104:Src/main.c    **** 
 105:Src/main.c    ****     // memset(NodeNameString, '\0', sizeof(NodeNameString));
 106:Src/main.c    ****     // strncpy(NodeNameString, (char*)NodeName, 8);
 107:Src/main.c    **** 
 108:Src/main.c    ****     return Success;
 109:Src/main.c    **** }
 110:Src/main.c    **** 
 111:Src/main.c    **** /**
 112:Src/main.c    ****   * @brief  SaveActiveApp
 113:Src/main.c    ****   *         Use the MetaDataManager functions save the active app address
 114:Src/main.c    ****   * @retval unsigned char: Success (1) from MetaDataManager recall
 115:Src/main.c    ****   */
 116:Src/main.c    **** unsigned char SaveActiveApp(uint32_t address) {
 117:Src/main.c    ****     unsigned char Success = 0;
 118:Src/main.c    **** 
 119:Src/main.c    ****     uint32_t ActiveAppToSave[1];
 120:Src/main.c    ****     ActiveAppToSave[0] = address;
 121:Src/main.c    **** 
 122:Src/main.c    ****     Success = MDM_SaveGMD(GMD_ACTIVE_APP,(void *)&ActiveAppToSave);
 123:Src/main.c    ****     NecessityToSaveMetaDataManager = 1;
 124:Src/main.c    **** 
 125:Src/main.c    ****     return Success;
 126:Src/main.c    **** }
 127:Src/main.c    **** 
 128:Src/main.c    **** void SaveActiveAppAddress(uint64_t activeAppAddress) {
 129:Src/main.c    **** 
 130:Src/main.c    ****     volatile HAL_StatusTypeDef flashStatus = HAL_OK;
 131:Src/main.c    **** 
 132:Src/main.c    ****     FLASH_EraseInitTypeDef EraseInitStruct;
 133:Src/main.c    ****     EraseInitStruct.TypeErase   = FLASH_TYPEERASE_PAGES;
 134:Src/main.c    ****     EraseInitStruct.Banks       = FLASH_BANK_2;
 135:Src/main.c    ****     EraseInitStruct.Page        = 254;
 136:Src/main.c    ****     EraseInitStruct.NbPages     = 1;
 137:Src/main.c    **** 
 138:Src/main.c    ****     /* Unlock the Flash to enable the flash control register access *************/
 139:Src/main.c    ****     HAL_FLASH_Unlock();
 140:Src/main.c    ****     uint32_t PageError;
 141:Src/main.c    ****     flashStatus = HAL_FLASHEx_Erase(&EraseInitStruct, &PageError);
 142:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t*)"App Address Erased\r\n", 20, 100);
 143:Src/main.c    **** 
 144:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t*)"Flashing\r\n", 10, 100);
 145:Src/main.c    **** 
 146:Src/main.c    ****     // uint64_t flashData = (((uint64_t) 0x00000000) << 32) + ((uint64_t) activeAppAddress);
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****     if (flashStatus == HAL_OK) {
 149:Src/main.c    ****         flashStatus = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, 0x080FF000, activeAppAddress)
 150:Src/main.c    ****     }
 151:Src/main.c    ****     HAL_FLASH_Lock();
 152:Src/main.c    **** 
 153:Src/main.c    ****     // return flashStatus;
 154:Src/main.c    **** }
 155:Src/main.c    **** 
 156:Src/main.c    **** // Temporary
 157:Src/main.c    **** uint64_t ReadActiveAppAddress()
 158:Src/main.c    **** {
 159:Src/main.c    **** 	volatile uint32_t read_data;
 160:Src/main.c    **** 	uint32_t buffered[2];
 161:Src/main.c    **** 	volatile uint32_t read_cnt = 0;
 162:Src/main.c    **** 	int index = 0;
 163:Src/main.c    **** 	do
 164:Src/main.c    **** 	{
 165:Src/main.c    **** 		read_data = *(uint32_t*)(0x080FF000 + read_cnt);
 166:Src/main.c    **** 
 167:Src/main.c    **** 		if(read_data != 0xFFFFFFFF)
 168:Src/main.c    **** 		{
 169:Src/main.c    **** 			buffered[index] = read_data;
 170:Src/main.c    ****             
 171:Src/main.c    ****       char buffer[16];
 172:Src/main.c    ****       sprintf(buffer, "Add: %ld ", buffered[index]);
 173:Src/main.c    **** 			HAL_UART_Transmit(&huart2, (uint8_t*)buffer, 10, 100);
 174:Src/main.c    **** 
 175:Src/main.c    **** 			read_cnt += 4;
 176:Src/main.c    **** 		}
 177:Src/main.c    **** 		index++;
 178:Src/main.c    **** 	} while(read_data != 0xFFFFFFFF);
 179:Src/main.c    **** 
 180:Src/main.c    ****   HAL_UART_Transmit(&huart2, (uint8_t*)"\n", 1, 100);
 181:Src/main.c    **** 
 182:Src/main.c    **** 	uint64_t jammed = ((uint64_t)buffered[1]<<32) + (uint64_t)buffered[0];
 183:Src/main.c    **** 	return jammed;
 184:Src/main.c    **** }
 185:Src/main.c    **** 
 186:Src/main.c    **** /**
 187:Src/main.c    ****   * @brief  SaveNodeName
 188:Src/main.c    ****   *         Use the MetaDataManager functions save node name
 189:Src/main.c    ****   * @retval unsigned char: Success (1) from MetaDataManager recall
 190:Src/main.c    ****   */
 191:Src/main.c    **** unsigned char SaveNodeName(char *data) {
 192:Src/main.c    ****     unsigned char Success = 0;
 193:Src/main.c    **** 
 194:Src/main.c    ****     uint8_t nameToSave[8];
 195:Src/main.c    **** 
 196:Src/main.c    ****     for (int i = 0; i < 8; i++) {
 197:Src/main.c    ****         nameToSave[i] = data[i];
 198:Src/main.c    ****     }
 199:Src/main.c    **** 
 200:Src/main.c    ****     Success = MDM_SaveGMD(GMD_NODE_NAME,(void *)&nameToSave);
 201:Src/main.c    ****     NecessityToSaveMetaDataManager = 1;
 202:Src/main.c    **** 
 203:Src/main.c    ****     return Success;
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 5


 204:Src/main.c    **** }
 205:Src/main.c    **** 
 206:Src/main.c    **** /**
 207:Src/main.c    ****   * @brief System Clock Configuration
 208:Src/main.c    ****   * @retval None
 209:Src/main.c    ****   */
 210:Src/main.c    **** void SystemClock_Config(void)
 211:Src/main.c    **** {
 212:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 213:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 214:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 215:Src/main.c    **** 
 216:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 217:Src/main.c    ****   */
 218:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 219:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 220:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 221:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 222:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 223:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 224:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 10;
 225:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 226:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 227:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 228:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 229:Src/main.c    ****   {
 230:Src/main.c    ****     Error_Handler();
 231:Src/main.c    ****   }
 232:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 233:Src/main.c    ****   */
 234:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 235:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 236:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 237:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 238:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 239:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 240:Src/main.c    **** 
 241:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 242:Src/main.c    ****   {
 243:Src/main.c    ****     Error_Handler();
 244:Src/main.c    ****   }
 245:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 246:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 247:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 248:Src/main.c    ****   {
 249:Src/main.c    ****     Error_Handler();
 250:Src/main.c    ****   }
 251:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 252:Src/main.c    ****   */
 253:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 254:Src/main.c    ****   {
 255:Src/main.c    ****     Error_Handler();
 256:Src/main.c    ****   }
 257:Src/main.c    **** }
 258:Src/main.c    **** 
 259:Src/main.c    **** /**
 260:Src/main.c    ****   * @brief USART2 Initialization Function
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 6


 261:Src/main.c    ****   * @param None
 262:Src/main.c    ****   * @retval None
 263:Src/main.c    ****   */
 264:Src/main.c    **** static void MX_USART2_UART_Init(void)
 265:Src/main.c    **** {
 266:Src/main.c    **** 
 267:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 268:Src/main.c    **** 
 269:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 270:Src/main.c    **** 
 271:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 274:Src/main.c    ****   huart2.Instance = USART2;
 275:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 276:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 277:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 278:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 279:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 280:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 281:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 282:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 283:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 284:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 285:Src/main.c    ****   {
 286:Src/main.c    ****     Error_Handler();
 287:Src/main.c    ****   }
 288:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 289:Src/main.c    **** 
 290:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 291:Src/main.c    **** 
 292:Src/main.c    **** }
 293:Src/main.c    **** 
 294:Src/main.c    **** /**
 295:Src/main.c    ****   * @brief GPIO Initialization Function
 296:Src/main.c    ****   * @param None
 297:Src/main.c    ****   * @retval None
 298:Src/main.c    ****   */
 299:Src/main.c    **** static void MX_GPIO_Init(void)
 300:Src/main.c    **** {
  27              		.loc 1 300 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 8AB0     		sub	sp, sp, #40
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 301:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 301 0
  40 0004 0024     		movs	r4, #0
  41 0006 0594     		str	r4, [sp, #20]
  42 0008 0694     		str	r4, [sp, #24]
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 7


  43 000a 0794     		str	r4, [sp, #28]
  44 000c 0894     		str	r4, [sp, #32]
  45 000e 0994     		str	r4, [sp, #36]
  46              	.LBB4:
 302:Src/main.c    **** 
 303:Src/main.c    ****   /* GPIO Ports Clock Enable */
 304:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 304 0
  48 0010 204B     		ldr	r3, .L3
  49 0012 DA6C     		ldr	r2, [r3, #76]
  50 0014 42F00402 		orr	r2, r2, #4
  51 0018 DA64     		str	r2, [r3, #76]
  52 001a DA6C     		ldr	r2, [r3, #76]
  53 001c 02F00402 		and	r2, r2, #4
  54 0020 0192     		str	r2, [sp, #4]
  55 0022 019A     		ldr	r2, [sp, #4]
  56              	.LBE4:
  57              	.LBB5:
 305:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  58              		.loc 1 305 0
  59 0024 DA6C     		ldr	r2, [r3, #76]
  60 0026 42F08002 		orr	r2, r2, #128
  61 002a DA64     		str	r2, [r3, #76]
  62 002c DA6C     		ldr	r2, [r3, #76]
  63 002e 02F08002 		and	r2, r2, #128
  64 0032 0292     		str	r2, [sp, #8]
  65 0034 029A     		ldr	r2, [sp, #8]
  66              	.LBE5:
  67              	.LBB6:
 306:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 306 0
  69 0036 DA6C     		ldr	r2, [r3, #76]
  70 0038 42F00102 		orr	r2, r2, #1
  71 003c DA64     		str	r2, [r3, #76]
  72 003e DA6C     		ldr	r2, [r3, #76]
  73 0040 02F00102 		and	r2, r2, #1
  74 0044 0392     		str	r2, [sp, #12]
  75 0046 039A     		ldr	r2, [sp, #12]
  76              	.LBE6:
  77              	.LBB7:
 307:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  78              		.loc 1 307 0
  79 0048 DA6C     		ldr	r2, [r3, #76]
  80 004a 42F00202 		orr	r2, r2, #2
  81 004e DA64     		str	r2, [r3, #76]
  82 0050 DB6C     		ldr	r3, [r3, #76]
  83 0052 03F00203 		and	r3, r3, #2
  84 0056 0493     		str	r3, [sp, #16]
  85 0058 049B     		ldr	r3, [sp, #16]
  86              	.LBE7:
 308:Src/main.c    **** 
 309:Src/main.c    ****   /*Configure GPIO pin Output Level */
 310:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
  87              		.loc 1 310 0
  88 005a 2246     		mov	r2, r4
  89 005c 2021     		movs	r1, #32
  90 005e 4FF09040 		mov	r0, #1207959552
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 8


  91 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
  92              	.LVL0:
 311:Src/main.c    **** 
 312:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 313:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
  93              		.loc 1 313 0
  94 0066 4FF40053 		mov	r3, #8192
  95 006a 0593     		str	r3, [sp, #20]
 314:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
  96              		.loc 1 314 0
  97 006c 0A4B     		ldr	r3, .L3+4
  98 006e 0693     		str	r3, [sp, #24]
 315:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  99              		.loc 1 315 0
 100 0070 0794     		str	r4, [sp, #28]
 316:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 101              		.loc 1 316 0
 102 0072 05A9     		add	r1, sp, #20
 103 0074 0948     		ldr	r0, .L3+8
 104 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 105              	.LVL1:
 317:Src/main.c    **** 
 318:Src/main.c    ****   /*Configure GPIO pin : LD2_Pin */
 319:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin;
 106              		.loc 1 319 0
 107 007a 2023     		movs	r3, #32
 108 007c 0593     		str	r3, [sp, #20]
 320:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 320 0
 110 007e 0123     		movs	r3, #1
 111 0080 0693     		str	r3, [sp, #24]
 321:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 321 0
 113 0082 0794     		str	r4, [sp, #28]
 322:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 114              		.loc 1 322 0
 115 0084 0894     		str	r4, [sp, #32]
 323:Src/main.c    ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 116              		.loc 1 323 0
 117 0086 05A9     		add	r1, sp, #20
 118 0088 4FF09040 		mov	r0, #1207959552
 119 008c FFF7FEFF 		bl	HAL_GPIO_Init
 120              	.LVL2:
 324:Src/main.c    **** 
 325:Src/main.c    **** }
 121              		.loc 1 325 0
 122 0090 0AB0     		add	sp, sp, #40
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 8
 125              		@ sp needed
 126 0092 10BD     		pop	{r4, pc}
 127              	.L4:
 128              		.align	2
 129              	.L3:
 130 0094 00100240 		.word	1073876992
 131 0098 00002110 		.word	270598144
 132 009c 00080048 		.word	1207961600
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 9


 133              		.cfi_endproc
 134              	.LFE141:
 136              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 137              		.align	1
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	MX_USART2_UART_Init:
 144              	.LFB140:
 265:Src/main.c    **** 
 145              		.loc 1 265 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149 0000 08B5     		push	{r3, lr}
 150              	.LCFI3:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 3, -8
 153              		.cfi_offset 14, -4
 274:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 154              		.loc 1 274 0
 155 0002 0948     		ldr	r0, .L7
 156 0004 094B     		ldr	r3, .L7+4
 157 0006 0360     		str	r3, [r0]
 275:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 158              		.loc 1 275 0
 159 0008 4FF4E133 		mov	r3, #115200
 160 000c 4360     		str	r3, [r0, #4]
 276:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 161              		.loc 1 276 0
 162 000e 0023     		movs	r3, #0
 163 0010 8360     		str	r3, [r0, #8]
 277:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 164              		.loc 1 277 0
 165 0012 C360     		str	r3, [r0, #12]
 278:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 166              		.loc 1 278 0
 167 0014 0361     		str	r3, [r0, #16]
 279:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 168              		.loc 1 279 0
 169 0016 0C22     		movs	r2, #12
 170 0018 4261     		str	r2, [r0, #20]
 280:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 171              		.loc 1 280 0
 172 001a 8361     		str	r3, [r0, #24]
 281:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 173              		.loc 1 281 0
 174 001c C361     		str	r3, [r0, #28]
 282:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 175              		.loc 1 282 0
 176 001e 0362     		str	r3, [r0, #32]
 283:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 177              		.loc 1 283 0
 178 0020 4362     		str	r3, [r0, #36]
 284:Src/main.c    ****   {
 179              		.loc 1 284 0
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 10


 180 0022 FFF7FEFF 		bl	HAL_UART_Init
 181              	.LVL3:
 292:Src/main.c    **** 
 182              		.loc 1 292 0
 183 0026 08BD     		pop	{r3, pc}
 184              	.L8:
 185              		.align	2
 186              	.L7:
 187 0028 00000000 		.word	huart2
 188 002c 00440040 		.word	1073759232
 189              		.cfi_endproc
 190              	.LFE140:
 192              		.section	.text.ReCallActiveAppAddrFromMemory,"ax",%progbits
 193              		.align	1
 194              		.global	ReCallActiveAppAddrFromMemory
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv4-sp-d16
 200              	ReCallActiveAppAddrFromMemory:
 201              	.LFB134:
  99:Src/main.c    ****     unsigned char Success = 0;
 202              		.loc 1 99 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206 0000 08B5     		push	{r3, lr}
 207              	.LCFI4:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 3, -8
 210              		.cfi_offset 14, -4
 211              	.LVL4:
 103:Src/main.c    **** 
 212              		.loc 1 103 0
 213 0002 0349     		ldr	r1, .L11
 214 0004 0320     		movs	r0, #3
 215 0006 FFF7FEFF 		bl	MDM_ReCallGMD
 216              	.LVL5:
 109:Src/main.c    **** 
 217              		.loc 1 109 0
 218 000a C0B2     		uxtb	r0, r0
 219 000c 08BD     		pop	{r3, pc}
 220              	.L12:
 221 000e 00BF     		.align	2
 222              	.L11:
 223 0010 00000000 		.word	ActiveApp
 224              		.cfi_endproc
 225              	.LFE134:
 227              		.section	.text.SaveActiveApp,"ax",%progbits
 228              		.align	1
 229              		.global	SaveActiveApp
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	SaveActiveApp:
 236              	.LFB135:
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 11


 116:Src/main.c    ****     unsigned char Success = 0;
 237              		.loc 1 116 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              	.LVL6:
 242 0000 00B5     		push	{lr}
 243              	.LCFI5:
 244              		.cfi_def_cfa_offset 4
 245              		.cfi_offset 14, -4
 246 0002 83B0     		sub	sp, sp, #12
 247              	.LCFI6:
 248              		.cfi_def_cfa_offset 16
 249              	.LVL7:
 120:Src/main.c    **** 
 250              		.loc 1 120 0
 251 0004 02A9     		add	r1, sp, #8
 252 0006 41F8040D 		str	r0, [r1, #-4]!
 122:Src/main.c    ****     NecessityToSaveMetaDataManager = 1;
 253              		.loc 1 122 0
 254 000a 0320     		movs	r0, #3
 255              	.LVL8:
 256 000c FFF7FEFF 		bl	MDM_SaveGMD
 257              	.LVL9:
 123:Src/main.c    **** 
 258              		.loc 1 123 0
 259 0010 034B     		ldr	r3, .L15
 260 0012 0122     		movs	r2, #1
 261 0014 1A60     		str	r2, [r3]
 126:Src/main.c    **** 
 262              		.loc 1 126 0
 263 0016 C0B2     		uxtb	r0, r0
 264 0018 03B0     		add	sp, sp, #12
 265              	.LCFI7:
 266              		.cfi_def_cfa_offset 4
 267              		@ sp needed
 268 001a 5DF804FB 		ldr	pc, [sp], #4
 269              	.L16:
 270 001e 00BF     		.align	2
 271              	.L15:
 272 0020 00000000 		.word	NecessityToSaveMetaDataManager
 273              		.cfi_endproc
 274              	.LFE135:
 276              		.section	.text.SaveActiveAppAddress,"ax",%progbits
 277              		.align	1
 278              		.global	SaveActiveAppAddress
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 282              		.fpu fpv4-sp-d16
 284              	SaveActiveAppAddress:
 285              	.LFB136:
 128:Src/main.c    **** 
 286              		.loc 1 128 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 24
 289              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 12


 290              	.LVL10:
 291 0000 D0B5     		push	{r4, r6, r7, lr}
 292              	.LCFI8:
 293              		.cfi_def_cfa_offset 16
 294              		.cfi_offset 4, -16
 295              		.cfi_offset 6, -12
 296              		.cfi_offset 7, -8
 297              		.cfi_offset 14, -4
 298 0002 86B0     		sub	sp, sp, #24
 299              	.LCFI9:
 300              		.cfi_def_cfa_offset 40
 301 0004 0646     		mov	r6, r0
 302 0006 0F46     		mov	r7, r1
 130:Src/main.c    **** 
 303              		.loc 1 130 0
 304 0008 0023     		movs	r3, #0
 305 000a 8DF81730 		strb	r3, [sp, #23]
 133:Src/main.c    ****     EraseInitStruct.Banks       = FLASH_BANK_2;
 306              		.loc 1 133 0
 307 000e 0193     		str	r3, [sp, #4]
 134:Src/main.c    ****     EraseInitStruct.Page        = 254;
 308              		.loc 1 134 0
 309 0010 0223     		movs	r3, #2
 310 0012 0293     		str	r3, [sp, #8]
 135:Src/main.c    ****     EraseInitStruct.NbPages     = 1;
 311              		.loc 1 135 0
 312 0014 FE23     		movs	r3, #254
 313 0016 0393     		str	r3, [sp, #12]
 136:Src/main.c    **** 
 314              		.loc 1 136 0
 315 0018 0123     		movs	r3, #1
 316 001a 0493     		str	r3, [sp, #16]
 139:Src/main.c    ****     uint32_t PageError;
 317              		.loc 1 139 0
 318 001c FFF7FEFF 		bl	HAL_FLASH_Unlock
 319              	.LVL11:
 141:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t*)"App Address Erased\r\n", 20, 100);
 320              		.loc 1 141 0
 321 0020 6946     		mov	r1, sp
 322 0022 01A8     		add	r0, sp, #4
 323 0024 FFF7FEFF 		bl	HAL_FLASHEx_Erase
 324              	.LVL12:
 325 0028 8DF81700 		strb	r0, [sp, #23]
 142:Src/main.c    **** 
 326              		.loc 1 142 0
 327 002c 0E4C     		ldr	r4, .L21
 328 002e 6423     		movs	r3, #100
 329 0030 1422     		movs	r2, #20
 330 0032 0E49     		ldr	r1, .L21+4
 331 0034 2046     		mov	r0, r4
 332 0036 FFF7FEFF 		bl	HAL_UART_Transmit
 333              	.LVL13:
 144:Src/main.c    **** 
 334              		.loc 1 144 0
 335 003a 6423     		movs	r3, #100
 336 003c 0A22     		movs	r2, #10
 337 003e 0C49     		ldr	r1, .L21+8
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 13


 338 0040 2046     		mov	r0, r4
 339 0042 FFF7FEFF 		bl	HAL_UART_Transmit
 340              	.LVL14:
 148:Src/main.c    ****         flashStatus = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, 0x080FF000, activeAppAddress)
 341              		.loc 1 148 0
 342 0046 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 343 004a 1BB1     		cbz	r3, .L20
 344              	.L18:
 151:Src/main.c    **** 
 345              		.loc 1 151 0
 346 004c FFF7FEFF 		bl	HAL_FLASH_Lock
 347              	.LVL15:
 154:Src/main.c    **** 
 348              		.loc 1 154 0
 349 0050 06B0     		add	sp, sp, #24
 350              	.LCFI10:
 351              		.cfi_remember_state
 352              		.cfi_def_cfa_offset 16
 353              		@ sp needed
 354 0052 D0BD     		pop	{r4, r6, r7, pc}
 355              	.L20:
 356              	.LCFI11:
 357              		.cfi_restore_state
 149:Src/main.c    ****     }
 358              		.loc 1 149 0
 359 0054 3246     		mov	r2, r6
 360 0056 3B46     		mov	r3, r7
 361 0058 0649     		ldr	r1, .L21+12
 362 005a 0020     		movs	r0, #0
 363 005c FFF7FEFF 		bl	HAL_FLASH_Program
 364              	.LVL16:
 365 0060 8DF81700 		strb	r0, [sp, #23]
 366 0064 F2E7     		b	.L18
 367              	.L22:
 368 0066 00BF     		.align	2
 369              	.L21:
 370 0068 00000000 		.word	huart2
 371 006c 00000000 		.word	.LC0
 372 0070 18000000 		.word	.LC1
 373 0074 00F00F08 		.word	135262208
 374              		.cfi_endproc
 375              	.LFE136:
 377              		.section	.text.ReadActiveAppAddress,"ax",%progbits
 378              		.align	1
 379              		.global	ReadActiveAppAddress
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv4-sp-d16
 385              	ReadActiveAppAddress:
 386              	.LFB137:
 158:Src/main.c    **** 	volatile uint32_t read_data;
 387              		.loc 1 158 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 32
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 14


 392              	.LCFI12:
 393              		.cfi_def_cfa_offset 12
 394              		.cfi_offset 4, -12
 395              		.cfi_offset 5, -8
 396              		.cfi_offset 14, -4
 397 0002 89B0     		sub	sp, sp, #36
 398              	.LCFI13:
 399              		.cfi_def_cfa_offset 48
 161:Src/main.c    **** 	int index = 0;
 400              		.loc 1 161 0
 401 0004 0024     		movs	r4, #0
 402 0006 0494     		str	r4, [sp, #16]
 403              	.LVL17:
 404 0008 04E0     		b	.L25
 405              	.LVL18:
 406              	.L24:
 177:Src/main.c    **** 	} while(read_data != 0xFFFFFFFF);
 407              		.loc 1 177 0
 408 000a 0134     		adds	r4, r4, #1
 409              	.LVL19:
 178:Src/main.c    **** 
 410              		.loc 1 178 0
 411 000c 079B     		ldr	r3, [sp, #28]
 412 000e B3F1FF3F 		cmp	r3, #-1
 413 0012 1ED0     		beq	.L27
 414              	.LVL20:
 415              	.L25:
 165:Src/main.c    **** 
 416              		.loc 1 165 0
 417 0014 049B     		ldr	r3, [sp, #16]
 418 0016 03F10063 		add	r3, r3, #134217728
 419 001a 03F57F23 		add	r3, r3, #1044480
 420 001e 1B68     		ldr	r3, [r3]
 421 0020 0793     		str	r3, [sp, #28]
 167:Src/main.c    **** 		{
 422              		.loc 1 167 0
 423 0022 079B     		ldr	r3, [sp, #28]
 424 0024 B3F1FF3F 		cmp	r3, #-1
 425 0028 EFD0     		beq	.L24
 426              	.LBB8:
 169:Src/main.c    ****             
 427              		.loc 1 169 0
 428 002a 079A     		ldr	r2, [sp, #28]
 429 002c 08AB     		add	r3, sp, #32
 430 002e 03EB8403 		add	r3, r3, r4, lsl #2
 431 0032 43F80C2C 		str	r2, [r3, #-12]
 172:Src/main.c    **** 			HAL_UART_Transmit(&huart2, (uint8_t*)buffer, 10, 100);
 432              		.loc 1 172 0
 433 0036 0F49     		ldr	r1, .L28
 434 0038 6846     		mov	r0, sp
 435 003a FFF7FEFF 		bl	sprintf
 436              	.LVL21:
 173:Src/main.c    **** 
 437              		.loc 1 173 0
 438 003e 6423     		movs	r3, #100
 439 0040 0A22     		movs	r2, #10
 440 0042 6946     		mov	r1, sp
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 15


 441 0044 0C48     		ldr	r0, .L28+4
 442 0046 FFF7FEFF 		bl	HAL_UART_Transmit
 443              	.LVL22:
 175:Src/main.c    **** 		}
 444              		.loc 1 175 0
 445 004a 049B     		ldr	r3, [sp, #16]
 446 004c 0433     		adds	r3, r3, #4
 447 004e 0493     		str	r3, [sp, #16]
 448 0050 DBE7     		b	.L24
 449              	.L27:
 450              	.LBE8:
 180:Src/main.c    **** 
 451              		.loc 1 180 0
 452 0052 6423     		movs	r3, #100
 453 0054 0122     		movs	r2, #1
 454 0056 0949     		ldr	r1, .L28+8
 455 0058 0748     		ldr	r0, .L28+4
 456 005a FFF7FEFF 		bl	HAL_UART_Transmit
 457              	.LVL23:
 182:Src/main.c    **** 	return jammed;
 458              		.loc 1 182 0
 459 005e 0022     		movs	r2, #0
 460 0060 069B     		ldr	r3, [sp, #24]
 461              	.LVL24:
 184:Src/main.c    **** 
 462              		.loc 1 184 0
 463 0062 0598     		ldr	r0, [sp, #20]
 464 0064 1418     		adds	r4, r2, r0
 465              	.LVL25:
 466 0066 43F10005 		adc	r5, r3, #0
 467 006a 2046     		mov	r0, r4
 468 006c 2946     		mov	r1, r5
 469 006e 09B0     		add	sp, sp, #36
 470              	.LCFI14:
 471              		.cfi_def_cfa_offset 12
 472              		@ sp needed
 473 0070 30BD     		pop	{r4, r5, pc}
 474              	.LVL26:
 475              	.L29:
 476 0072 00BF     		.align	2
 477              	.L28:
 478 0074 00000000 		.word	.LC2
 479 0078 00000000 		.word	huart2
 480 007c 0C000000 		.word	.LC3
 481              		.cfi_endproc
 482              	.LFE137:
 484              		.section	.text.SaveNodeName,"ax",%progbits
 485              		.align	1
 486              		.global	SaveNodeName
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 490              		.fpu fpv4-sp-d16
 492              	SaveNodeName:
 493              	.LFB138:
 191:Src/main.c    ****     unsigned char Success = 0;
 494              		.loc 1 191 0
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 16


 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 8
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              	.LVL27:
 499 0000 00B5     		push	{lr}
 500              	.LCFI15:
 501              		.cfi_def_cfa_offset 4
 502              		.cfi_offset 14, -4
 503 0002 83B0     		sub	sp, sp, #12
 504              	.LCFI16:
 505              		.cfi_def_cfa_offset 16
 506              	.LVL28:
 507              	.LBB9:
 196:Src/main.c    ****         nameToSave[i] = data[i];
 508              		.loc 1 196 0
 509 0004 0023     		movs	r3, #0
 510 0006 05E0     		b	.L31
 511              	.LVL29:
 512              	.L32:
 197:Src/main.c    ****     }
 513              		.loc 1 197 0 discriminator 3
 514 0008 C15C     		ldrb	r1, [r0, r3]	@ zero_extendqisi2
 515 000a 02AA     		add	r2, sp, #8
 516 000c 1A44     		add	r2, r2, r3
 517 000e 02F8081C 		strb	r1, [r2, #-8]
 196:Src/main.c    ****         nameToSave[i] = data[i];
 518              		.loc 1 196 0 discriminator 3
 519 0012 0133     		adds	r3, r3, #1
 520              	.LVL30:
 521              	.L31:
 196:Src/main.c    ****         nameToSave[i] = data[i];
 522              		.loc 1 196 0 is_stmt 0 discriminator 1
 523 0014 072B     		cmp	r3, #7
 524 0016 F7DD     		ble	.L32
 525              	.LBE9:
 200:Src/main.c    ****     NecessityToSaveMetaDataManager = 1;
 526              		.loc 1 200 0 is_stmt 1
 527 0018 6946     		mov	r1, sp
 528 001a 0120     		movs	r0, #1
 529              	.LVL31:
 530 001c FFF7FEFF 		bl	MDM_SaveGMD
 531              	.LVL32:
 201:Src/main.c    **** 
 532              		.loc 1 201 0
 533 0020 034B     		ldr	r3, .L34
 534 0022 0122     		movs	r2, #1
 535 0024 1A60     		str	r2, [r3]
 204:Src/main.c    **** 
 536              		.loc 1 204 0
 537 0026 C0B2     		uxtb	r0, r0
 538 0028 03B0     		add	sp, sp, #12
 539              	.LCFI17:
 540              		.cfi_def_cfa_offset 4
 541              		@ sp needed
 542 002a 5DF804FB 		ldr	pc, [sp], #4
 543              	.L35:
 544 002e 00BF     		.align	2
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 17


 545              	.L34:
 546 0030 00000000 		.word	NecessityToSaveMetaDataManager
 547              		.cfi_endproc
 548              	.LFE138:
 550              		.section	.text.SystemClock_Config,"ax",%progbits
 551              		.align	1
 552              		.global	SystemClock_Config
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 556              		.fpu fpv4-sp-d16
 558              	SystemClock_Config:
 559              	.LFB139:
 211:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 560              		.loc 1 211 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 224
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564 0000 30B5     		push	{r4, r5, lr}
 565              	.LCFI18:
 566              		.cfi_def_cfa_offset 12
 567              		.cfi_offset 4, -12
 568              		.cfi_offset 5, -8
 569              		.cfi_offset 14, -4
 570 0002 B9B0     		sub	sp, sp, #228
 571              	.LCFI19:
 572              		.cfi_def_cfa_offset 240
 212:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 573              		.loc 1 212 0
 574 0004 2422     		movs	r2, #36
 575 0006 0021     		movs	r1, #0
 576 0008 28A8     		add	r0, sp, #160
 577 000a FFF7FEFF 		bl	memset
 578              	.LVL33:
 213:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 579              		.loc 1 213 0
 580 000e 0024     		movs	r4, #0
 581 0010 2294     		str	r4, [sp, #136]
 582 0012 2394     		str	r4, [sp, #140]
 583 0014 2494     		str	r4, [sp, #144]
 584 0016 2594     		str	r4, [sp, #148]
 585 0018 2694     		str	r4, [sp, #152]
 214:Src/main.c    **** 
 586              		.loc 1 214 0
 587 001a 8822     		movs	r2, #136
 588 001c 2146     		mov	r1, r4
 589 001e 6846     		mov	r0, sp
 590 0020 FFF7FEFF 		bl	memset
 591              	.LVL34:
 218:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 592              		.loc 1 218 0
 593 0024 0225     		movs	r5, #2
 594 0026 2795     		str	r5, [sp, #156]
 219:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 595              		.loc 1 219 0
 596 0028 4FF48073 		mov	r3, #256
 597 002c 2A93     		str	r3, [sp, #168]
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 18


 220:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 598              		.loc 1 220 0
 599 002e 1023     		movs	r3, #16
 600 0030 2B93     		str	r3, [sp, #172]
 221:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 601              		.loc 1 221 0
 602 0032 3195     		str	r5, [sp, #196]
 222:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 603              		.loc 1 222 0
 604 0034 3295     		str	r5, [sp, #200]
 223:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 10;
 605              		.loc 1 223 0
 606 0036 0123     		movs	r3, #1
 607 0038 3393     		str	r3, [sp, #204]
 224:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 608              		.loc 1 224 0
 609 003a 0A23     		movs	r3, #10
 610 003c 3493     		str	r3, [sp, #208]
 225:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 611              		.loc 1 225 0
 612 003e 0723     		movs	r3, #7
 613 0040 3593     		str	r3, [sp, #212]
 226:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 614              		.loc 1 226 0
 615 0042 3695     		str	r5, [sp, #216]
 227:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 616              		.loc 1 227 0
 617 0044 3795     		str	r5, [sp, #220]
 228:Src/main.c    ****   {
 618              		.loc 1 228 0
 619 0046 27A8     		add	r0, sp, #156
 620 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 621              	.LVL35:
 234:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 622              		.loc 1 234 0
 623 004c 0F23     		movs	r3, #15
 624 004e 2293     		str	r3, [sp, #136]
 236:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 625              		.loc 1 236 0
 626 0050 0323     		movs	r3, #3
 627 0052 2393     		str	r3, [sp, #140]
 237:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 628              		.loc 1 237 0
 629 0054 2494     		str	r4, [sp, #144]
 238:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 630              		.loc 1 238 0
 631 0056 2594     		str	r4, [sp, #148]
 239:Src/main.c    **** 
 632              		.loc 1 239 0
 633 0058 2694     		str	r4, [sp, #152]
 241:Src/main.c    ****   {
 634              		.loc 1 241 0
 635 005a 0421     		movs	r1, #4
 636 005c 22A8     		add	r0, sp, #136
 637 005e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 638              	.LVL36:
 245:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 19


 639              		.loc 1 245 0
 640 0062 0095     		str	r5, [sp]
 246:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 641              		.loc 1 246 0
 642 0064 0F94     		str	r4, [sp, #60]
 247:Src/main.c    ****   {
 643              		.loc 1 247 0
 644 0066 6846     		mov	r0, sp
 645 0068 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 646              	.LVL37:
 253:Src/main.c    ****   {
 647              		.loc 1 253 0
 648 006c 4FF40070 		mov	r0, #512
 649 0070 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 650              	.LVL38:
 257:Src/main.c    **** 
 651              		.loc 1 257 0
 652 0074 39B0     		add	sp, sp, #228
 653              	.LCFI20:
 654              		.cfi_def_cfa_offset 12
 655              		@ sp needed
 656 0076 30BD     		pop	{r4, r5, pc}
 657              		.cfi_endproc
 658              	.LFE139:
 660              		.section	.text.main,"ax",%progbits
 661              		.align	1
 662              		.global	main
 663              		.syntax unified
 664              		.thumb
 665              		.thumb_func
 666              		.fpu fpv4-sp-d16
 668              	main:
 669              	.LFB133:
  59:Src/main.c    ****   HAL_Init();
 670              		.loc 1 59 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674 0000 08B5     		push	{r3, lr}
 675              	.LCFI21:
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 3, -8
 678              		.cfi_offset 14, -4
  60:Src/main.c    ****   SystemClock_Config();
 679              		.loc 1 60 0
 680 0002 FFF7FEFF 		bl	HAL_Init
 681              	.LVL39:
  61:Src/main.c    ****   MX_GPIO_Init();
 682              		.loc 1 61 0
 683 0006 FFF7FEFF 		bl	SystemClock_Config
 684              	.LVL40:
  62:Src/main.c    ****   MX_USART2_UART_Init();
 685              		.loc 1 62 0
 686 000a FFF7FEFF 		bl	MX_GPIO_Init
 687              	.LVL41:
  63:Src/main.c    **** 
 688              		.loc 1 63 0
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 20


 689 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 690              	.LVL42:
  65:Src/main.c    **** 	__enable_irq();
 691              		.loc 1 65 0
 692 0012 094B     		ldr	r3, .L40
 693 0014 4FF00062 		mov	r2, #134217728
 694 0018 9A60     		str	r2, [r3, #8]
 695              	.LBB10:
 696              	.LBB11:
 697              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 21


  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 22


 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 698              		.loc 2 131 0
 699              		.syntax unified
 700              	@ 131 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 701 001a 62B6     		cpsie i
 702              	@ 0 "" 2
 703              		.thumb
 704              		.syntax unified
 705              	.LBE11:
 706              	.LBE10:
  89:Src/main.c    ****   uint64_t activeAppAddress = ReadActiveAppAddress();
 707              		.loc 1 89 0
 708 001c 4FF47A73 		mov	r3, #1000
 709 0020 1222     		movs	r2, #18
 710 0022 0649     		ldr	r1, .L40+4
 711 0024 0648     		ldr	r0, .L40+8
 712 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 713              	.LVL43:
  90:Src/main.c    ****   SystemAppJump(activeAppAddress);
 714              		.loc 1 90 0
 715 002a FFF7FEFF 		bl	ReadActiveAppAddress
 716              	.LVL44:
  91:Src/main.c    **** }
 717              		.loc 1 91 0
 718 002e FFF7FEFF 		bl	SystemAppJump
 719              	.LVL45:
  92:Src/main.c    **** 
 720              		.loc 1 92 0
 721 0032 0020     		movs	r0, #0
 722 0034 08BD     		pop	{r3, pc}
 723              	.L41:
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 23


 724 0036 00BF     		.align	2
 725              	.L40:
 726 0038 00ED00E0 		.word	-536810240
 727 003c 00000000 		.word	.LC4
 728 0040 00000000 		.word	huart2
 729              		.cfi_endproc
 730              	.LFE133:
 732              		.section	.text.Error_Handler,"ax",%progbits
 733              		.align	1
 734              		.global	Error_Handler
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 738              		.fpu fpv4-sp-d16
 740              	Error_Handler:
 741              	.LFB142:
 326:Src/main.c    **** 
 327:Src/main.c    **** /* USER CODE BEGIN 4 */
 328:Src/main.c    **** 
 329:Src/main.c    **** /* USER CODE END 4 */
 330:Src/main.c    **** 
 331:Src/main.c    **** /**
 332:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 333:Src/main.c    ****   * @retval None
 334:Src/main.c    ****   */
 335:Src/main.c    **** void Error_Handler(void)
 336:Src/main.c    **** {
 742              		.loc 1 336 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 337:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 338:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 339:Src/main.c    **** 
 340:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 341:Src/main.c    **** }
 747              		.loc 1 341 0
 748 0000 7047     		bx	lr
 749              		.cfi_endproc
 750              	.LFE142:
 752              		.global	known_MetaData
 753              		.comm	ActiveApp,4,4
 754              		.comm	APIToken,32,4
 755              		.comm	NodeName,8,4
 756              		.comm	huart2,128,4
 757              		.section	.data.known_MetaData,"aw",%progbits
 758              		.align	2
 761              	known_MetaData:
 762 0000 01       		.byte	1
 763 0001 000000   		.space	3
 764 0004 08000000 		.word	8
 765 0008 02       		.byte	2
 766 0009 000000   		.space	3
 767 000c 20000000 		.word	32
 768 0010 03       		.byte	3
 769 0011 000000   		.space	3
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 24


 770 0014 04000000 		.word	4
 771 0018 00       		.byte	0
 772 0019 000000   		.space	3
 773 001c 00000000 		.word	0
 774              		.section	.rodata.ReadActiveAppAddress.str1.4,"aMS",%progbits,1
 775              		.align	2
 776              	.LC2:
 777 0000 4164643A 		.ascii	"Add: %ld \000"
 777      20256C64 
 777      2000
 778 000a 0000     		.space	2
 779              	.LC3:
 780 000c 0A00     		.ascii	"\012\000"
 781              		.section	.rodata.SaveActiveAppAddress.str1.4,"aMS",%progbits,1
 782              		.align	2
 783              	.LC0:
 784 0000 41707020 		.ascii	"App Address Erased\015\012\000"
 784      41646472 
 784      65737320 
 784      45726173 
 784      65640D0A 
 785 0015 000000   		.space	3
 786              	.LC1:
 787 0018 466C6173 		.ascii	"Flashing\015\012\000"
 787      68696E67 
 787      0D0A00
 788              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 789              		.align	2
 790              	.LC4:
 791 0000 496E2062 		.ascii	"In bootloader...\015\012\000"
 791      6F6F746C 
 791      6F616465 
 791      722E2E2E 
 791      0D0A00
 792              		.text
 793              	.Letext0:
 794              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 795              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 796              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 797              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 798              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 799              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 800              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 801              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 802              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 803              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 804              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 805              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 806              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 807              		.file 16 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 808              		.file 17 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 809              		.file 18 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 810              		.file 19 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 811              		.file 20 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 812              		.file 21 "STM32_MetaDataManager/MetaDataManager.h"
 813              		.file 22 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 814              		.file 23 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdio.h"
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 25


 815              		.file 24 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash_ex.h"
 816              		.file 25 "Inc/system_jump.h"
 817              		.file 26 "<built-in>"
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:18     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:130    .text.MX_GPIO_Init:0000000000000094 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:137    .text.MX_USART2_UART_Init:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:143    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:187    .text.MX_USART2_UART_Init:0000000000000028 $d
                            *COM*:0000000000000080 huart2
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:193    .text.ReCallActiveAppAddrFromMemory:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:200    .text.ReCallActiveAppAddrFromMemory:0000000000000000 ReCallActiveAppAddrFromMemory
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:223    .text.ReCallActiveAppAddrFromMemory:0000000000000010 $d
                            *COM*:0000000000000004 ActiveApp
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:228    .text.SaveActiveApp:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:235    .text.SaveActiveApp:0000000000000000 SaveActiveApp
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:272    .text.SaveActiveApp:0000000000000020 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:277    .text.SaveActiveAppAddress:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:284    .text.SaveActiveAppAddress:0000000000000000 SaveActiveAppAddress
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:370    .text.SaveActiveAppAddress:0000000000000068 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:378    .text.ReadActiveAppAddress:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:385    .text.ReadActiveAppAddress:0000000000000000 ReadActiveAppAddress
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:478    .text.ReadActiveAppAddress:0000000000000074 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:485    .text.SaveNodeName:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:492    .text.SaveNodeName:0000000000000000 SaveNodeName
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:546    .text.SaveNodeName:0000000000000030 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:551    .text.SystemClock_Config:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:558    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:661    .text.main:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:668    .text.main:0000000000000000 main
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:726    .text.main:0000000000000038 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:733    .text.Error_Handler:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:740    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:761    .data.known_MetaData:0000000000000000 known_MetaData
                            *COM*:0000000000000020 APIToken
                            *COM*:0000000000000008 NodeName
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:758    .data.known_MetaData:0000000000000000 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:775    .rodata.ReadActiveAppAddress.str1.4:0000000000000000 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:782    .rodata.SaveActiveAppAddress.str1.4:0000000000000000 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s:789    .rodata.main.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
MDM_ReCallGMD
MDM_SaveGMD
NecessityToSaveMetaDataManager
HAL_FLASH_Unlock
HAL_FLASHEx_Erase
HAL_UART_Transmit
HAL_FLASH_Lock
HAL_FLASH_Program
sprintf
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccQNAUzc.s 			page 27


HAL_PWREx_ControlVoltageScaling
HAL_Init
SystemAppJump
