ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_cdc_if.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CDC_DeInit_FS,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	CDC_DeInit_FS:
  25              	.LFB134:
  26              		.file 1 "Src/usbd_cdc_if.c"
   1:Src/usbd_cdc_if.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_cdc_if.c **** /**
   3:Src/usbd_cdc_if.c ****   ******************************************************************************
   4:Src/usbd_cdc_if.c ****   * @file           : usbd_cdc_if.c
   5:Src/usbd_cdc_if.c ****   * @version        : v2.0_Cube
   6:Src/usbd_cdc_if.c ****   * @brief          : Usb device for Virtual Com Port.
   7:Src/usbd_cdc_if.c ****   ******************************************************************************
   8:Src/usbd_cdc_if.c ****   * @attention
   9:Src/usbd_cdc_if.c ****   *
  10:Src/usbd_cdc_if.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  11:Src/usbd_cdc_if.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_cdc_if.c ****   *
  13:Src/usbd_cdc_if.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_cdc_if.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_cdc_if.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_cdc_if.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_cdc_if.c ****   *
  18:Src/usbd_cdc_if.c ****   ******************************************************************************
  19:Src/usbd_cdc_if.c ****   */
  20:Src/usbd_cdc_if.c **** /* USER CODE END Header */
  21:Src/usbd_cdc_if.c **** 
  22:Src/usbd_cdc_if.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_cdc_if.c **** #include "usbd_cdc_if.h"
  24:Src/usbd_cdc_if.c **** #include "main.h"
  25:Src/usbd_cdc_if.c **** #include "flash_firmware.h"
  26:Src/usbd_cdc_if.c **** #include "system_jump.h"
  27:Src/usbd_cdc_if.c **** 
  28:Src/usbd_cdc_if.c **** /* USER CODE BEGIN INCLUDE */
  29:Src/usbd_cdc_if.c **** 
  30:Src/usbd_cdc_if.c **** /* USER CODE END INCLUDE */
  31:Src/usbd_cdc_if.c **** 
  32:Src/usbd_cdc_if.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 2


  33:Src/usbd_cdc_if.c **** /* Private define ------------------------------------------------------------*/
  34:Src/usbd_cdc_if.c **** /* Private macro -------------------------------------------------------------*/
  35:Src/usbd_cdc_if.c **** 
  36:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PV */
  37:Src/usbd_cdc_if.c **** /* Private variables ---------------------------------------------------------*/
  38:Src/usbd_cdc_if.c **** 
  39:Src/usbd_cdc_if.c **** /* USER CODE END PV */
  40:Src/usbd_cdc_if.c **** 
  41:Src/usbd_cdc_if.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  42:Src/usbd_cdc_if.c ****   * @brief Usb device library.
  43:Src/usbd_cdc_if.c ****   * @{
  44:Src/usbd_cdc_if.c ****   */
  45:Src/usbd_cdc_if.c **** 
  46:Src/usbd_cdc_if.c **** /** @addtogroup USBD_CDC_IF
  47:Src/usbd_cdc_if.c ****   * @{
  48:Src/usbd_cdc_if.c ****   */
  49:Src/usbd_cdc_if.c **** 
  50:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_TypesDefinitions USBD_CDC_IF_Private_TypesDefinitions
  51:Src/usbd_cdc_if.c ****   * @brief Private types.
  52:Src/usbd_cdc_if.c ****   * @{
  53:Src/usbd_cdc_if.c ****   */
  54:Src/usbd_cdc_if.c **** 
  55:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  56:Src/usbd_cdc_if.c **** 
  57:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_TYPES */
  58:Src/usbd_cdc_if.c **** 
  59:Src/usbd_cdc_if.c **** /**
  60:Src/usbd_cdc_if.c ****   * @}
  61:Src/usbd_cdc_if.c ****   */
  62:Src/usbd_cdc_if.c **** 
  63:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Defines USBD_CDC_IF_Private_Defines
  64:Src/usbd_cdc_if.c ****   * @brief Private defines.
  65:Src/usbd_cdc_if.c ****   * @{
  66:Src/usbd_cdc_if.c ****   */
  67:Src/usbd_cdc_if.c **** 
  68:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  69:Src/usbd_cdc_if.c **** /* Define size for the receive and transmit buffer over CDC */
  70:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  71:Src/usbd_cdc_if.c **** #define APP_RX_DATA_SIZE  2048
  72:Src/usbd_cdc_if.c **** #define APP_TX_DATA_SIZE  2048
  73:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_DEFINES */
  74:Src/usbd_cdc_if.c **** 
  75:Src/usbd_cdc_if.c **** /**
  76:Src/usbd_cdc_if.c ****   * @}
  77:Src/usbd_cdc_if.c ****   */
  78:Src/usbd_cdc_if.c **** 
  79:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Macros USBD_CDC_IF_Private_Macros
  80:Src/usbd_cdc_if.c ****   * @brief Private macros.
  81:Src/usbd_cdc_if.c ****   * @{
  82:Src/usbd_cdc_if.c ****   */
  83:Src/usbd_cdc_if.c **** 
  84:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  85:Src/usbd_cdc_if.c **** 
  86:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_MACRO */
  87:Src/usbd_cdc_if.c **** 
  88:Src/usbd_cdc_if.c **** /**
  89:Src/usbd_cdc_if.c ****   * @}
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 3


  90:Src/usbd_cdc_if.c ****   */
  91:Src/usbd_cdc_if.c **** 
  92:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Variables USBD_CDC_IF_Private_Variables
  93:Src/usbd_cdc_if.c ****   * @brief Private variables.
  94:Src/usbd_cdc_if.c ****   * @{
  95:Src/usbd_cdc_if.c ****   */
  96:Src/usbd_cdc_if.c **** /* Create buffer for reception and transmission           */
  97:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  98:Src/usbd_cdc_if.c **** /** Received data over USB are stored in this buffer      */
  99:Src/usbd_cdc_if.c **** uint8_t UserRxBufferFS[APP_RX_DATA_SIZE];
 100:Src/usbd_cdc_if.c **** 
 101:Src/usbd_cdc_if.c **** /** Data to send over USB CDC are stored in this buffer   */
 102:Src/usbd_cdc_if.c **** uint8_t UserTxBufferFS[APP_TX_DATA_SIZE];
 103:Src/usbd_cdc_if.c **** 
 104:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_VARIABLES */
 105:Src/usbd_cdc_if.c **** 
 106:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_VARIABLES */
 107:Src/usbd_cdc_if.c **** 
 108:Src/usbd_cdc_if.c **** /**
 109:Src/usbd_cdc_if.c ****   * @}
 110:Src/usbd_cdc_if.c ****   */
 111:Src/usbd_cdc_if.c **** 
 112:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Exported_Variables USBD_CDC_IF_Exported_Variables
 113:Src/usbd_cdc_if.c ****   * @brief Public variables.
 114:Src/usbd_cdc_if.c ****   * @{
 115:Src/usbd_cdc_if.c ****   */
 116:Src/usbd_cdc_if.c **** 
 117:Src/usbd_cdc_if.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
 118:Src/usbd_cdc_if.c **** 
 119:Src/usbd_cdc_if.c **** /* USER CODE BEGIN EXPORTED_VARIABLES */
 120:Src/usbd_cdc_if.c **** 
 121:Src/usbd_cdc_if.c **** /* USER CODE END EXPORTED_VARIABLES */
 122:Src/usbd_cdc_if.c **** 
 123:Src/usbd_cdc_if.c **** /**
 124:Src/usbd_cdc_if.c ****   * @}
 125:Src/usbd_cdc_if.c ****   */
 126:Src/usbd_cdc_if.c **** 
 127:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_FunctionPrototypes USBD_CDC_IF_Private_FunctionPrototypes
 128:Src/usbd_cdc_if.c ****   * @brief Private functions declaration.
 129:Src/usbd_cdc_if.c ****   * @{
 130:Src/usbd_cdc_if.c ****   */
 131:Src/usbd_cdc_if.c **** 
 132:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void);
 133:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void);
 134:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length);
 135:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS(uint8_t* pbuf, uint32_t *Len);
 136:Src/usbd_cdc_if.c **** static void Jump_To_App();
 137:Src/usbd_cdc_if.c **** 
 138:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_FUNCTIONS_DECLARATION */
 139:Src/usbd_cdc_if.c **** 
 140:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_FUNCTIONS_DECLARATION */
 141:Src/usbd_cdc_if.c **** 
 142:Src/usbd_cdc_if.c **** /**
 143:Src/usbd_cdc_if.c ****   * @}
 144:Src/usbd_cdc_if.c ****   */
 145:Src/usbd_cdc_if.c **** 
 146:Src/usbd_cdc_if.c **** USBD_CDC_ItfTypeDef USBD_Interface_fops_FS =
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 4


 147:Src/usbd_cdc_if.c **** {
 148:Src/usbd_cdc_if.c ****   CDC_Init_FS,
 149:Src/usbd_cdc_if.c ****   CDC_DeInit_FS,
 150:Src/usbd_cdc_if.c ****   CDC_Control_FS,
 151:Src/usbd_cdc_if.c ****   CDC_Receive_FS
 152:Src/usbd_cdc_if.c **** };
 153:Src/usbd_cdc_if.c **** 
 154:Src/usbd_cdc_if.c **** /* Private functions ---------------------------------------------------------*/
 155:Src/usbd_cdc_if.c **** /**
 156:Src/usbd_cdc_if.c ****   * @brief  Initializes the CDC media low layer over the FS USB IP
 157:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 158:Src/usbd_cdc_if.c ****   */
 159:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void)
 160:Src/usbd_cdc_if.c **** {
 161:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */
 162:Src/usbd_cdc_if.c ****   /* Set Application Buffers */
 163:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, UserTxBufferFS, 0);
 164:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 165:Src/usbd_cdc_if.c ****   return (USBD_OK);
 166:Src/usbd_cdc_if.c ****   /* USER CODE END 3 */
 167:Src/usbd_cdc_if.c **** }
 168:Src/usbd_cdc_if.c **** 
 169:Src/usbd_cdc_if.c **** /**
 170:Src/usbd_cdc_if.c ****   * @brief  DeInitializes the CDC media low layer
 171:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 172:Src/usbd_cdc_if.c ****   */
 173:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void)
 174:Src/usbd_cdc_if.c **** {
  27              		.loc 1 174 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 175:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 4 */
 176:Src/usbd_cdc_if.c ****   return (USBD_OK);
 177:Src/usbd_cdc_if.c ****   /* USER CODE END 4 */
 178:Src/usbd_cdc_if.c **** }
  32              		.loc 1 178 0
  33 0000 0020     		movs	r0, #0
  34 0002 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE134:
  38              		.section	.text.CDC_Control_FS,"ax",%progbits
  39              		.align	1
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	CDC_Control_FS:
  46              	.LFB135:
 179:Src/usbd_cdc_if.c **** 
 180:Src/usbd_cdc_if.c **** /**
 181:Src/usbd_cdc_if.c ****   * @brief  Manage the CDC class requests
 182:Src/usbd_cdc_if.c ****   * @param  cmd: Command code
 183:Src/usbd_cdc_if.c ****   * @param  pbuf: Buffer containing command data (request parameters)
 184:Src/usbd_cdc_if.c ****   * @param  length: Number of data to be sent (in bytes)
 185:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 5


 186:Src/usbd_cdc_if.c ****   */
 187:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length)
 188:Src/usbd_cdc_if.c **** {
  47              		.loc 1 188 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.LVL0:
 189:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 5 */
 190:Src/usbd_cdc_if.c ****   switch(cmd)
 191:Src/usbd_cdc_if.c ****   {
 192:Src/usbd_cdc_if.c ****     case CDC_SEND_ENCAPSULATED_COMMAND:
 193:Src/usbd_cdc_if.c **** 
 194:Src/usbd_cdc_if.c ****     break;
 195:Src/usbd_cdc_if.c **** 
 196:Src/usbd_cdc_if.c ****     case CDC_GET_ENCAPSULATED_RESPONSE:
 197:Src/usbd_cdc_if.c **** 
 198:Src/usbd_cdc_if.c ****     break;
 199:Src/usbd_cdc_if.c **** 
 200:Src/usbd_cdc_if.c ****     case CDC_SET_COMM_FEATURE:
 201:Src/usbd_cdc_if.c **** 
 202:Src/usbd_cdc_if.c ****     break;
 203:Src/usbd_cdc_if.c **** 
 204:Src/usbd_cdc_if.c ****     case CDC_GET_COMM_FEATURE:
 205:Src/usbd_cdc_if.c **** 
 206:Src/usbd_cdc_if.c ****     break;
 207:Src/usbd_cdc_if.c **** 
 208:Src/usbd_cdc_if.c ****     case CDC_CLEAR_COMM_FEATURE:
 209:Src/usbd_cdc_if.c **** 
 210:Src/usbd_cdc_if.c ****     break;
 211:Src/usbd_cdc_if.c **** 
 212:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 213:Src/usbd_cdc_if.c ****   /* Line Coding Structure                                                       */
 214:Src/usbd_cdc_if.c ****   /*-----------------------------------------------------------------------------*/
 215:Src/usbd_cdc_if.c ****   /* Offset | Field       | Size | Value  | Description                          */
 216:Src/usbd_cdc_if.c ****   /* 0      | dwDTERate   |   4  | Number |Data terminal rate, in bits per second*/
 217:Src/usbd_cdc_if.c ****   /* 4      | bCharFormat |   1  | Number | Stop bits                            */
 218:Src/usbd_cdc_if.c ****   /*                                        0 - 1 Stop bit                       */
 219:Src/usbd_cdc_if.c ****   /*                                        1 - 1.5 Stop bits                    */
 220:Src/usbd_cdc_if.c ****   /*                                        2 - 2 Stop bits                      */
 221:Src/usbd_cdc_if.c ****   /* 5      | bParityType |  1   | Number | Parity                               */
 222:Src/usbd_cdc_if.c ****   /*                                        0 - None                             */
 223:Src/usbd_cdc_if.c ****   /*                                        1 - Odd                              */
 224:Src/usbd_cdc_if.c ****   /*                                        2 - Even                             */
 225:Src/usbd_cdc_if.c ****   /*                                        3 - Mark                             */
 226:Src/usbd_cdc_if.c ****   /*                                        4 - Space                            */
 227:Src/usbd_cdc_if.c ****   /* 6      | bDataBits  |   1   | Number Data bits (5, 6, 7, 8 or 16).          */
 228:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 229:Src/usbd_cdc_if.c ****     case CDC_SET_LINE_CODING:
 230:Src/usbd_cdc_if.c **** 
 231:Src/usbd_cdc_if.c ****     break;
 232:Src/usbd_cdc_if.c **** 
 233:Src/usbd_cdc_if.c ****     case CDC_GET_LINE_CODING:
 234:Src/usbd_cdc_if.c **** 
 235:Src/usbd_cdc_if.c ****     break;
 236:Src/usbd_cdc_if.c **** 
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 6


 237:Src/usbd_cdc_if.c ****     case CDC_SET_CONTROL_LINE_STATE:
 238:Src/usbd_cdc_if.c **** 
 239:Src/usbd_cdc_if.c ****     break;
 240:Src/usbd_cdc_if.c **** 
 241:Src/usbd_cdc_if.c ****     case CDC_SEND_BREAK:
 242:Src/usbd_cdc_if.c **** 
 243:Src/usbd_cdc_if.c ****     break;
 244:Src/usbd_cdc_if.c **** 
 245:Src/usbd_cdc_if.c ****   default:
 246:Src/usbd_cdc_if.c ****     break;
 247:Src/usbd_cdc_if.c ****   }
 248:Src/usbd_cdc_if.c **** 
 249:Src/usbd_cdc_if.c ****   return (USBD_OK);
 250:Src/usbd_cdc_if.c ****   /* USER CODE END 5 */
 251:Src/usbd_cdc_if.c **** }
  53              		.loc 1 251 0
  54 0000 0020     		movs	r0, #0
  55              	.LVL1:
  56 0002 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE135:
  60              		.section	.text.CDC_Init_FS,"ax",%progbits
  61              		.align	1
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	CDC_Init_FS:
  68              	.LFB133:
 160:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */
  69              		.loc 1 160 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73 0000 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
 163:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
  78              		.loc 1 163 0
  79 0002 064C     		ldr	r4, .L5
  80 0004 0022     		movs	r2, #0
  81 0006 0649     		ldr	r1, .L5+4
  82 0008 2046     		mov	r0, r4
  83 000a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
  84              	.LVL2:
 164:Src/usbd_cdc_if.c ****   return (USBD_OK);
  85              		.loc 1 164 0
  86 000e 0549     		ldr	r1, .L5+8
  87 0010 2046     		mov	r0, r4
  88 0012 FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
  89              	.LVL3:
 167:Src/usbd_cdc_if.c **** 
  90              		.loc 1 167 0
  91 0016 0020     		movs	r0, #0
  92 0018 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 7


  93              	.L6:
  94 001a 00BF     		.align	2
  95              	.L5:
  96 001c 00000000 		.word	hUsbDeviceFS
  97 0020 00000000 		.word	UserTxBufferFS
  98 0024 00000000 		.word	UserRxBufferFS
  99              		.cfi_endproc
 100              	.LFE133:
 102              		.section	.text.CDC_Transmit_FS,"ax",%progbits
 103              		.align	1
 104              		.global	CDC_Transmit_FS
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	CDC_Transmit_FS:
 111              	.LFB137:
 252:Src/usbd_cdc_if.c **** 
 253:Src/usbd_cdc_if.c **** uint8_t recBuffer[128];
 254:Src/usbd_cdc_if.c **** int bufIndex = 0;
 255:Src/usbd_cdc_if.c **** char sendOut[5];
 256:Src/usbd_cdc_if.c **** uint8_t upgradeMode = 0;
 257:Src/usbd_cdc_if.c **** uint8_t firstPackage;
 258:Src/usbd_cdc_if.c **** uint32_t flashAddress;
 259:Src/usbd_cdc_if.c **** HAL_StatusTypeDef packageStatus;
 260:Src/usbd_cdc_if.c **** 
 261:Src/usbd_cdc_if.c **** /**
 262:Src/usbd_cdc_if.c ****   * @brief  Data received over USB OUT endpoint are sent over CDC interface
 263:Src/usbd_cdc_if.c ****   *         through this function.
 264:Src/usbd_cdc_if.c ****   *
 265:Src/usbd_cdc_if.c ****   *         @note
 266:Src/usbd_cdc_if.c ****   *         This function will block any OUT packet reception on USB endpoint
 267:Src/usbd_cdc_if.c ****   *         untill exiting this function. If you exit this function before transfer
 268:Src/usbd_cdc_if.c ****   *         is complete on CDC interface (ie. using DMA controller) it will result
 269:Src/usbd_cdc_if.c ****   *         in receiving more data while previous ones are still not sent.
 270:Src/usbd_cdc_if.c ****   *
 271:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be received
 272:Src/usbd_cdc_if.c ****   * @param  Len: Number of data received (in bytes)
 273:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 274:Src/usbd_cdc_if.c ****   */
 275:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS(uint8_t* Buf, uint32_t *Len)
 276:Src/usbd_cdc_if.c **** {
 277:Src/usbd_cdc_if.c ****   for (int i = 0; i < *Len; i++) { // Incoming buffer of max 64 bytes - append buffers until '\n'
 278:Src/usbd_cdc_if.c ****     recBuffer[bufIndex] = Buf[i];
 279:Src/usbd_cdc_if.c **** 
 280:Src/usbd_cdc_if.c ****     if (i == 0) {
 281:Src/usbd_cdc_if.c ****       HAL_UART_Transmit(&huart2, (uint8_t*)"\r\n", 2, 100);
 282:Src/usbd_cdc_if.c ****     }
 283:Src/usbd_cdc_if.c **** 
 284:Src/usbd_cdc_if.c ****     sprintf(sendOut, "%02x", recBuffer[bufIndex]);
 285:Src/usbd_cdc_if.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)sendOut, 2, 100);
 286:Src/usbd_cdc_if.c **** 
 287:Src/usbd_cdc_if.c ****     bufIndex += 1;
 288:Src/usbd_cdc_if.c ****     
 289:Src/usbd_cdc_if.c ****     // if (Buf[i] == '\n') {
 290:Src/usbd_cdc_if.c ****     if (i == *Len-1) {
 291:Src/usbd_cdc_if.c ****       sprintf(sendOut, " L%ld ", *Len);
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 8


 292:Src/usbd_cdc_if.c ****       HAL_UART_Transmit(&huart2, (uint8_t*)sendOut, 4, 100);
 293:Src/usbd_cdc_if.c ****       if (!upgradeMode) {
 294:Src/usbd_cdc_if.c ****         if (memcmp((char*)recBuffer, "upgrade", 7) == 0) {
 295:Src/usbd_cdc_if.c ****           upgradeMode = 1;
 296:Src/usbd_cdc_if.c ****           flashAddress = 0x08080000;
 297:Src/usbd_cdc_if.c ****           firstPackage = 1;
 298:Src/usbd_cdc_if.c ****           HAL_UART_Transmit(&huart2, (uint8_t*)"\r\nUpgrade mode\r\n", 16, 100);
 299:Src/usbd_cdc_if.c ****         }
 300:Src/usbd_cdc_if.c ****       }
 301:Src/usbd_cdc_if.c ****       else {
 302:Src/usbd_cdc_if.c ****         if (memcmp((char*)recBuffer, "upgrade-done", 12) == 0) {
 303:Src/usbd_cdc_if.c ****           upgradeMode = 0;
 304:Src/usbd_cdc_if.c ****           flashAddress = 0x08080000;
 305:Src/usbd_cdc_if.c ****           firstPackage = 1;
 306:Src/usbd_cdc_if.c ****           HAL_UART_Transmit(&huart2, (uint8_t*)"\r\nUpgrade done\r\n", 16, 100);
 307:Src/usbd_cdc_if.c ****           CDC_Transmit_FS((uint8_t*)"return upgrade=end\r\n", 20);
 308:Src/usbd_cdc_if.c ****           HAL_Delay(5000);
 309:Src/usbd_cdc_if.c ****           SystemAppJump(0x08080000);
 310:Src/usbd_cdc_if.c ****         }
 311:Src/usbd_cdc_if.c ****         else {
 312:Src/usbd_cdc_if.c ****           HAL_UART_Transmit(&huart2, (uint8_t*)"\r\nIn upgrade\r\n", 14, 100);
 313:Src/usbd_cdc_if.c ****           packageStatus = Save_Rec_FW((char*)recBuffer, *Len);
 314:Src/usbd_cdc_if.c ****           if (packageStatus == HAL_OK) {
 315:Src/usbd_cdc_if.c ****             CDC_Transmit_FS((uint8_t*)"return package=success\r\n", 24);
 316:Src/usbd_cdc_if.c ****           }
 317:Src/usbd_cdc_if.c ****           else {
 318:Src/usbd_cdc_if.c ****             CDC_Transmit_FS((uint8_t*)"return package=fail\r\n", 21);
 319:Src/usbd_cdc_if.c ****           }
 320:Src/usbd_cdc_if.c ****         }
 321:Src/usbd_cdc_if.c ****       }
 322:Src/usbd_cdc_if.c ****       bufIndex = 0;
 323:Src/usbd_cdc_if.c ****       memset(recBuffer, 0, sizeof(recBuffer));
 324:Src/usbd_cdc_if.c ****     }
 325:Src/usbd_cdc_if.c ****   }
 326:Src/usbd_cdc_if.c **** 
 327:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
 328:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 329:Src/usbd_cdc_if.c ****   return (USBD_OK);
 330:Src/usbd_cdc_if.c **** }
 331:Src/usbd_cdc_if.c **** 
 332:Src/usbd_cdc_if.c **** /**
 333:Src/usbd_cdc_if.c ****   * @brief  CDC_Transmit_FS
 334:Src/usbd_cdc_if.c ****   *         Data to send over USB IN endpoint are sent over CDC interface
 335:Src/usbd_cdc_if.c ****   *         through this function.
 336:Src/usbd_cdc_if.c ****   *         @note
 337:Src/usbd_cdc_if.c ****   *
 338:Src/usbd_cdc_if.c ****   *
 339:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be sent
 340:Src/usbd_cdc_if.c ****   * @param  Len: Number of data to be sent (in bytes)
 341:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
 342:Src/usbd_cdc_if.c ****   */
 343:Src/usbd_cdc_if.c **** uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len)
 344:Src/usbd_cdc_if.c **** {
 112              		.loc 1 344 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 9


 116              	.LVL4:
 345:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 346:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 7 */
 347:Src/usbd_cdc_if.c ****   USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceFS.pClassData;
 117              		.loc 1 347 0
 118 0000 094B     		ldr	r3, .L15
 119 0002 D3F8B832 		ldr	r3, [r3, #696]
 120              	.LVL5:
 348:Src/usbd_cdc_if.c ****   if (hcdc->TxState != 0){
 121              		.loc 1 348 0
 122 0006 D3F81432 		ldr	r3, [r3, #532]
 123              	.LVL6:
 124 000a 0BB1     		cbz	r3, .L14
 349:Src/usbd_cdc_if.c ****     return USBD_BUSY;
 125              		.loc 1 349 0
 126 000c 0120     		movs	r0, #1
 127              	.LVL7:
 350:Src/usbd_cdc_if.c ****   }
 351:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, Buf, Len);
 352:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 353:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 354:Src/usbd_cdc_if.c ****   return result;
 355:Src/usbd_cdc_if.c **** }
 128              		.loc 1 355 0
 129 000e 7047     		bx	lr
 130              	.LVL8:
 131              	.L14:
 344:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 132              		.loc 1 344 0
 133 0010 10B5     		push	{r4, lr}
 134              	.LCFI1:
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 4, -8
 137              		.cfi_offset 14, -4
 138 0012 0A46     		mov	r2, r1
 139 0014 0146     		mov	r1, r0
 140              	.LVL9:
 351:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 141              		.loc 1 351 0
 142 0016 044C     		ldr	r4, .L15
 143              	.LVL10:
 144 0018 2046     		mov	r0, r4
 145              	.LVL11:
 146 001a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 147              	.LVL12:
 352:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 148              		.loc 1 352 0
 149 001e 2046     		mov	r0, r4
 150 0020 FFF7FEFF 		bl	USBD_CDC_TransmitPacket
 151              	.LVL13:
 152              		.loc 1 355 0
 153 0024 10BD     		pop	{r4, pc}
 154              	.L16:
 155 0026 00BF     		.align	2
 156              	.L15:
 157 0028 00000000 		.word	hUsbDeviceFS
 158              		.cfi_endproc
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 10


 159              	.LFE137:
 161              		.section	.text.CDC_Receive_FS,"ax",%progbits
 162              		.align	1
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu fpv4-sp-d16
 168              	CDC_Receive_FS:
 169              	.LFB136:
 276:Src/usbd_cdc_if.c ****   for (int i = 0; i < *Len; i++) { // Incoming buffer of max 64 bytes - append buffers until '\n'
 170              		.loc 1 276 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              	.LVL14:
 175 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 176              	.LCFI2:
 177              		.cfi_def_cfa_offset 32
 178              		.cfi_offset 3, -32
 179              		.cfi_offset 4, -28
 180              		.cfi_offset 5, -24
 181              		.cfi_offset 6, -20
 182              		.cfi_offset 7, -16
 183              		.cfi_offset 8, -12
 184              		.cfi_offset 9, -8
 185              		.cfi_offset 14, -4
 186 0004 8146     		mov	r9, r0
 187 0006 0F46     		mov	r7, r1
 188              	.LVL15:
 189              	.LBB2:
 277:Src/usbd_cdc_if.c ****     recBuffer[bufIndex] = Buf[i];
 190              		.loc 1 277 0
 191 0008 0024     		movs	r4, #0
 192 000a 16E0     		b	.L18
 193              	.LVL16:
 194              	.L19:
 284:Src/usbd_cdc_if.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)sendOut, 2, 100);
 195              		.loc 1 284 0
 196 000c 4B4D     		ldr	r5, .L30
 197 000e 2B68     		ldr	r3, [r5]
 198 0010 4B4E     		ldr	r6, .L30+4
 199 0012 4C4A     		ldr	r2, .L30+8
 200 0014 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 201 0016 4C49     		ldr	r1, .L30+12
 202 0018 3046     		mov	r0, r6
 203 001a FFF7FEFF 		bl	sprintf
 204              	.LVL17:
 285:Src/usbd_cdc_if.c **** 
 205              		.loc 1 285 0
 206 001e 6423     		movs	r3, #100
 207 0020 0222     		movs	r2, #2
 208 0022 3146     		mov	r1, r6
 209 0024 4948     		ldr	r0, .L30+16
 210 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 211              	.LVL18:
 287:Src/usbd_cdc_if.c ****     
 212              		.loc 1 287 0
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 11


 213 002a 2B68     		ldr	r3, [r5]
 214 002c 0133     		adds	r3, r3, #1
 215 002e 2B60     		str	r3, [r5]
 290:Src/usbd_cdc_if.c ****       sprintf(sendOut, " L%ld ", *Len);
 216              		.loc 1 290 0
 217 0030 3A68     		ldr	r2, [r7]
 218 0032 531E     		subs	r3, r2, #1
 219 0034 4345     		cmp	r3, r8
 220 0036 13D0     		beq	.L27
 221              	.L20:
 277:Src/usbd_cdc_if.c ****     recBuffer[bufIndex] = Buf[i];
 222              		.loc 1 277 0 discriminator 2
 223 0038 0134     		adds	r4, r4, #1
 224              	.LVL19:
 225              	.L18:
 277:Src/usbd_cdc_if.c ****     recBuffer[bufIndex] = Buf[i];
 226              		.loc 1 277 0 is_stmt 0 discriminator 1
 227 003a 3B68     		ldr	r3, [r7]
 228 003c A046     		mov	r8, r4
 229 003e A342     		cmp	r3, r4
 230 0040 70D9     		bls	.L28
 278:Src/usbd_cdc_if.c **** 
 231              		.loc 1 278 0 is_stmt 1
 232 0042 3E4B     		ldr	r3, .L30
 233 0044 1B68     		ldr	r3, [r3]
 234 0046 19F80410 		ldrb	r1, [r9, r4]	@ zero_extendqisi2
 235 004a 3E4A     		ldr	r2, .L30+8
 236 004c D154     		strb	r1, [r2, r3]
 280:Src/usbd_cdc_if.c ****       HAL_UART_Transmit(&huart2, (uint8_t*)"\r\n", 2, 100);
 237              		.loc 1 280 0
 238 004e 002C     		cmp	r4, #0
 239 0050 DCD1     		bne	.L19
 281:Src/usbd_cdc_if.c ****     }
 240              		.loc 1 281 0
 241 0052 6423     		movs	r3, #100
 242 0054 0222     		movs	r2, #2
 243 0056 3E49     		ldr	r1, .L30+20
 244 0058 3C48     		ldr	r0, .L30+16
 245 005a FFF7FEFF 		bl	HAL_UART_Transmit
 246              	.LVL20:
 247 005e D5E7     		b	.L19
 248              	.L27:
 291:Src/usbd_cdc_if.c ****       HAL_UART_Transmit(&huart2, (uint8_t*)sendOut, 4, 100);
 249              		.loc 1 291 0
 250 0060 3C49     		ldr	r1, .L30+24
 251 0062 3046     		mov	r0, r6
 252 0064 FFF7FEFF 		bl	sprintf
 253              	.LVL21:
 292:Src/usbd_cdc_if.c ****       if (!upgradeMode) {
 254              		.loc 1 292 0
 255 0068 6423     		movs	r3, #100
 256 006a 0422     		movs	r2, #4
 257 006c 3146     		mov	r1, r6
 258 006e 3748     		ldr	r0, .L30+16
 259 0070 FFF7FEFF 		bl	HAL_UART_Transmit
 260              	.LVL22:
 293:Src/usbd_cdc_if.c ****         if (memcmp((char*)recBuffer, "upgrade", 7) == 0) {
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 12


 261              		.loc 1 293 0
 262 0074 384B     		ldr	r3, .L30+28
 263 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 264 0078 E3B9     		cbnz	r3, .L21
 294:Src/usbd_cdc_if.c ****           upgradeMode = 1;
 265              		.loc 1 294 0
 266 007a 0722     		movs	r2, #7
 267 007c 3749     		ldr	r1, .L30+32
 268 007e 3148     		ldr	r0, .L30+8
 269 0080 FFF7FEFF 		bl	memcmp
 270              	.LVL23:
 271 0084 38B1     		cbz	r0, .L29
 272              	.L22:
 322:Src/usbd_cdc_if.c ****       memset(recBuffer, 0, sizeof(recBuffer));
 273              		.loc 1 322 0
 274 0086 0021     		movs	r1, #0
 275 0088 2C4B     		ldr	r3, .L30
 276 008a 1960     		str	r1, [r3]
 323:Src/usbd_cdc_if.c ****     }
 277              		.loc 1 323 0
 278 008c 8022     		movs	r2, #128
 279 008e 2D48     		ldr	r0, .L30+8
 280 0090 FFF7FEFF 		bl	memset
 281              	.LVL24:
 282 0094 D0E7     		b	.L20
 283              	.L29:
 295:Src/usbd_cdc_if.c ****           flashAddress = 0x08080000;
 284              		.loc 1 295 0
 285 0096 0123     		movs	r3, #1
 286 0098 2F4A     		ldr	r2, .L30+28
 287 009a 1370     		strb	r3, [r2]
 296:Src/usbd_cdc_if.c ****           firstPackage = 1;
 288              		.loc 1 296 0
 289 009c 304A     		ldr	r2, .L30+36
 290 009e 3149     		ldr	r1, .L30+40
 291 00a0 1160     		str	r1, [r2]
 297:Src/usbd_cdc_if.c ****           HAL_UART_Transmit(&huart2, (uint8_t*)"\r\nUpgrade mode\r\n", 16, 100);
 292              		.loc 1 297 0
 293 00a2 314A     		ldr	r2, .L30+44
 294 00a4 1370     		strb	r3, [r2]
 298:Src/usbd_cdc_if.c ****         }
 295              		.loc 1 298 0
 296 00a6 6423     		movs	r3, #100
 297 00a8 1022     		movs	r2, #16
 298 00aa 3049     		ldr	r1, .L30+48
 299 00ac 2748     		ldr	r0, .L30+16
 300 00ae FFF7FEFF 		bl	HAL_UART_Transmit
 301              	.LVL25:
 302 00b2 E8E7     		b	.L22
 303              	.L21:
 302:Src/usbd_cdc_if.c ****           upgradeMode = 0;
 304              		.loc 1 302 0
 305 00b4 0C22     		movs	r2, #12
 306 00b6 2E49     		ldr	r1, .L30+52
 307 00b8 2248     		ldr	r0, .L30+8
 308 00ba FFF7FEFF 		bl	memcmp
 309              	.LVL26:
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 13


 310 00be D0B9     		cbnz	r0, .L23
 303:Src/usbd_cdc_if.c ****           flashAddress = 0x08080000;
 311              		.loc 1 303 0
 312 00c0 254B     		ldr	r3, .L30+28
 313 00c2 0022     		movs	r2, #0
 314 00c4 1A70     		strb	r2, [r3]
 304:Src/usbd_cdc_if.c ****           firstPackage = 1;
 315              		.loc 1 304 0
 316 00c6 274D     		ldr	r5, .L30+40
 317 00c8 254B     		ldr	r3, .L30+36
 318 00ca 1D60     		str	r5, [r3]
 305:Src/usbd_cdc_if.c ****           HAL_UART_Transmit(&huart2, (uint8_t*)"\r\nUpgrade done\r\n", 16, 100);
 319              		.loc 1 305 0
 320 00cc 264B     		ldr	r3, .L30+44
 321 00ce 0122     		movs	r2, #1
 322 00d0 1A70     		strb	r2, [r3]
 306:Src/usbd_cdc_if.c ****           CDC_Transmit_FS((uint8_t*)"return upgrade=end\r\n", 20);
 323              		.loc 1 306 0
 324 00d2 6423     		movs	r3, #100
 325 00d4 1022     		movs	r2, #16
 326 00d6 2749     		ldr	r1, .L30+56
 327 00d8 1C48     		ldr	r0, .L30+16
 328 00da FFF7FEFF 		bl	HAL_UART_Transmit
 329              	.LVL27:
 307:Src/usbd_cdc_if.c ****           HAL_Delay(5000);
 330              		.loc 1 307 0
 331 00de 1421     		movs	r1, #20
 332 00e0 2548     		ldr	r0, .L30+60
 333 00e2 FFF7FEFF 		bl	CDC_Transmit_FS
 334              	.LVL28:
 308:Src/usbd_cdc_if.c ****           SystemAppJump(0x08080000);
 335              		.loc 1 308 0
 336 00e6 41F28830 		movw	r0, #5000
 337 00ea FFF7FEFF 		bl	HAL_Delay
 338              	.LVL29:
 309:Src/usbd_cdc_if.c ****         }
 339              		.loc 1 309 0
 340 00ee 2846     		mov	r0, r5
 341 00f0 FFF7FEFF 		bl	SystemAppJump
 342              	.LVL30:
 343 00f4 C7E7     		b	.L22
 344              	.L23:
 312:Src/usbd_cdc_if.c ****           packageStatus = Save_Rec_FW((char*)recBuffer, *Len);
 345              		.loc 1 312 0
 346 00f6 6423     		movs	r3, #100
 347 00f8 0E22     		movs	r2, #14
 348 00fa 2049     		ldr	r1, .L30+64
 349 00fc 1348     		ldr	r0, .L30+16
 350 00fe FFF7FEFF 		bl	HAL_UART_Transmit
 351              	.LVL31:
 313:Src/usbd_cdc_if.c ****           if (packageStatus == HAL_OK) {
 352              		.loc 1 313 0
 353 0102 3968     		ldr	r1, [r7]
 354 0104 0F48     		ldr	r0, .L30+8
 355 0106 FFF7FEFF 		bl	Save_Rec_FW
 356              	.LVL32:
 357 010a 1D4B     		ldr	r3, .L30+68
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 14


 358 010c 1870     		strb	r0, [r3]
 314:Src/usbd_cdc_if.c ****             CDC_Transmit_FS((uint8_t*)"return package=success\r\n", 24);
 359              		.loc 1 314 0
 360 010e 20B9     		cbnz	r0, .L24
 315:Src/usbd_cdc_if.c ****           }
 361              		.loc 1 315 0
 362 0110 1821     		movs	r1, #24
 363 0112 1C48     		ldr	r0, .L30+72
 364 0114 FFF7FEFF 		bl	CDC_Transmit_FS
 365              	.LVL33:
 366 0118 B5E7     		b	.L22
 367              	.L24:
 318:Src/usbd_cdc_if.c ****           }
 368              		.loc 1 318 0
 369 011a 1521     		movs	r1, #21
 370 011c 1A48     		ldr	r0, .L30+76
 371 011e FFF7FEFF 		bl	CDC_Transmit_FS
 372              	.LVL34:
 373 0122 B0E7     		b	.L22
 374              	.L28:
 375              	.LBE2:
 327:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 376              		.loc 1 327 0
 377 0124 194C     		ldr	r4, .L30+80
 378              	.LVL35:
 379 0126 4946     		mov	r1, r9
 380 0128 2046     		mov	r0, r4
 381 012a FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
 382              	.LVL36:
 328:Src/usbd_cdc_if.c ****   return (USBD_OK);
 383              		.loc 1 328 0
 384 012e 2046     		mov	r0, r4
 385 0130 FFF7FEFF 		bl	USBD_CDC_ReceivePacket
 386              	.LVL37:
 330:Src/usbd_cdc_if.c **** 
 387              		.loc 1 330 0
 388 0134 0020     		movs	r0, #0
 389 0136 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 390              	.LVL38:
 391              	.L31:
 392 013a 00BF     		.align	2
 393              	.L30:
 394 013c 00000000 		.word	.LANCHOR0
 395 0140 00000000 		.word	sendOut
 396 0144 00000000 		.word	recBuffer
 397 0148 04000000 		.word	.LC1
 398 014c 00000000 		.word	huart2
 399 0150 00000000 		.word	.LC0
 400 0154 0C000000 		.word	.LC2
 401 0158 00000000 		.word	.LANCHOR1
 402 015c 14000000 		.word	.LC3
 403 0160 00000000 		.word	flashAddress
 404 0164 00000808 		.word	134742016
 405 0168 00000000 		.word	firstPackage
 406 016c 1C000000 		.word	.LC4
 407 0170 30000000 		.word	.LC5
 408 0174 40000000 		.word	.LC6
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 15


 409 0178 54000000 		.word	.LC7
 410 017c 6C000000 		.word	.LC8
 411 0180 00000000 		.word	packageStatus
 412 0184 7C000000 		.word	.LC9
 413 0188 98000000 		.word	.LC10
 414 018c 00000000 		.word	hUsbDeviceFS
 415              		.cfi_endproc
 416              	.LFE136:
 418              		.comm	packageStatus,1,1
 419              		.comm	flashAddress,4,4
 420              		.comm	firstPackage,1,1
 421              		.global	upgradeMode
 422              		.comm	sendOut,5,4
 423              		.global	bufIndex
 424              		.comm	recBuffer,128,4
 425              		.global	USBD_Interface_fops_FS
 426              		.comm	UserTxBufferFS,2048,4
 427              		.comm	UserRxBufferFS,2048,4
 428              		.section	.bss.bufIndex,"aw",%nobits
 429              		.align	2
 430              		.set	.LANCHOR0,. + 0
 433              	bufIndex:
 434 0000 00000000 		.space	4
 435              		.section	.bss.upgradeMode,"aw",%nobits
 436              		.set	.LANCHOR1,. + 0
 439              	upgradeMode:
 440 0000 00       		.space	1
 441              		.section	.data.USBD_Interface_fops_FS,"aw",%progbits
 442              		.align	2
 445              	USBD_Interface_fops_FS:
 446 0000 00000000 		.word	CDC_Init_FS
 447 0004 00000000 		.word	CDC_DeInit_FS
 448 0008 00000000 		.word	CDC_Control_FS
 449 000c 00000000 		.word	CDC_Receive_FS
 450              		.section	.rodata.CDC_Receive_FS.str1.4,"aMS",%progbits,1
 451              		.align	2
 452              	.LC0:
 453 0000 0D0A00   		.ascii	"\015\012\000"
 454 0003 00       		.space	1
 455              	.LC1:
 456 0004 25303278 		.ascii	"%02x\000"
 456      00
 457 0009 000000   		.space	3
 458              	.LC2:
 459 000c 204C256C 		.ascii	" L%ld \000"
 459      642000
 460 0013 00       		.space	1
 461              	.LC3:
 462 0014 75706772 		.ascii	"upgrade\000"
 462      61646500 
 463              	.LC4:
 464 001c 0D0A5570 		.ascii	"\015\012Upgrade mode\015\012\000"
 464      67726164 
 464      65206D6F 
 464      64650D0A 
 464      00
 465 002d 000000   		.space	3
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 16


 466              	.LC5:
 467 0030 75706772 		.ascii	"upgrade-done\000"
 467      6164652D 
 467      646F6E65 
 467      00
 468 003d 000000   		.space	3
 469              	.LC6:
 470 0040 0D0A5570 		.ascii	"\015\012Upgrade done\015\012\000"
 470      67726164 
 470      6520646F 
 470      6E650D0A 
 470      00
 471 0051 000000   		.space	3
 472              	.LC7:
 473 0054 72657475 		.ascii	"return upgrade=end\015\012\000"
 473      726E2075 
 473      70677261 
 473      64653D65 
 473      6E640D0A 
 474 0069 000000   		.space	3
 475              	.LC8:
 476 006c 0D0A496E 		.ascii	"\015\012In upgrade\015\012\000"
 476      20757067 
 476      72616465 
 476      0D0A00
 477 007b 00       		.space	1
 478              	.LC9:
 479 007c 72657475 		.ascii	"return package=success\015\012\000"
 479      726E2070 
 479      61636B61 
 479      67653D73 
 479      75636365 
 480 0095 000000   		.space	3
 481              	.LC10:
 482 0098 72657475 		.ascii	"return package=fail\015\012\000"
 482      726E2070 
 482      61636B61 
 482      67653D66 
 482      61696C0D 
 483              		.text
 484              	.Letext0:
 485              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 486              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 487              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 488              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 489              		.file 6 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 490              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 491              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 492              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 493              		.file 10 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 494              		.file 11 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 495              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 496              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 497              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 498              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 499              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 500              		.file 17 "Inc/main.h"
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 17


 501              		.file 18 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 502              		.file 19 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 503              		.file 20 "Inc/usbd_cdc_if.h"
 504              		.file 21 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdio.h"
 505              		.file 22 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/string.h"
 506              		.file 23 "Inc/system_jump.h"
 507              		.file 24 "Inc/flash_firmware.h"
 508              		.file 25 "<built-in>"
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_cdc_if.c
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:18     .text.CDC_DeInit_FS:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:24     .text.CDC_DeInit_FS:0000000000000000 CDC_DeInit_FS
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:39     .text.CDC_Control_FS:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:45     .text.CDC_Control_FS:0000000000000000 CDC_Control_FS
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:61     .text.CDC_Init_FS:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:67     .text.CDC_Init_FS:0000000000000000 CDC_Init_FS
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:96     .text.CDC_Init_FS:000000000000001c $d
                            *COM*:0000000000000800 UserTxBufferFS
                            *COM*:0000000000000800 UserRxBufferFS
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:103    .text.CDC_Transmit_FS:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:110    .text.CDC_Transmit_FS:0000000000000000 CDC_Transmit_FS
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:157    .text.CDC_Transmit_FS:0000000000000028 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:162    .text.CDC_Receive_FS:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:168    .text.CDC_Receive_FS:0000000000000000 CDC_Receive_FS
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:394    .text.CDC_Receive_FS:000000000000013c $d
                            *COM*:0000000000000005 sendOut
                            *COM*:0000000000000080 recBuffer
                            *COM*:0000000000000004 flashAddress
                            *COM*:0000000000000001 firstPackage
                            *COM*:0000000000000001 packageStatus
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:439    .bss.upgradeMode:0000000000000000 upgradeMode
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:433    .bss.bufIndex:0000000000000000 bufIndex
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:445    .data.USBD_Interface_fops_FS:0000000000000000 USBD_Interface_fops_FS
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:429    .bss.bufIndex:0000000000000000 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:440    .bss.upgradeMode:0000000000000000 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:442    .data.USBD_Interface_fops_FS:0000000000000000 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//ccRFITpM.s:451    .rodata.CDC_Receive_FS.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
USBD_CDC_SetTxBuffer
USBD_CDC_SetRxBuffer
hUsbDeviceFS
USBD_CDC_TransmitPacket
sprintf
HAL_UART_Transmit
memcmp
memset
HAL_Delay
SystemAppJump
Save_Rec_FW
USBD_CDC_ReceivePacket
huart2
