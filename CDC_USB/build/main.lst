ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB136:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "usb_device.h"
  24:Src/main.c    **** #include "flash_firmware.h"
  25:Src/main.c    **** 
  26:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  27:Src/main.c    **** UART_HandleTypeDef huart2;
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  30:Src/main.c    **** void SystemClock_Config(void);
  31:Src/main.c    **** static void MX_GPIO_Init(void);
  32:Src/main.c    **** static void MX_USART2_UART_Init(void);
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /**
  35:Src/main.c    ****   * @brief  The application entry point.
  36:Src/main.c    ****   * @retval int
  37:Src/main.c    ****   */
  38:Src/main.c    **** int main(void)
  39:Src/main.c    **** {
  40:Src/main.c    ****   HAL_Init();
  41:Src/main.c    ****   SystemClock_Config();
  42:Src/main.c    ****   MX_GPIO_Init();
  43:Src/main.c    ****   MX_USART2_UART_Init();
  44:Src/main.c    ****   MX_USB_DEVICE_Init();
  45:Src/main.c    **** 
  46:Src/main.c    ****   SCB->VTOR = 0x08000000;
  47:Src/main.c    ****   __enable_irq();
  48:Src/main.c    **** 
  49:Src/main.c    ****   while (1)
  50:Src/main.c    ****   {
  51:Src/main.c    ****   }
  52:Src/main.c    **** }
  53:Src/main.c    **** 
  54:Src/main.c    **** /**
  55:Src/main.c    ****   * @brief System Clock Configuration
  56:Src/main.c    ****   * @retval None
  57:Src/main.c    ****   */
  58:Src/main.c    **** void SystemClock_Config(void)
  59:Src/main.c    **** {
  60:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  61:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  62:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  63:Src/main.c    **** 
  64:Src/main.c    ****   /** Configure LSE Drive Capability 
  65:Src/main.c    ****   */
  66:Src/main.c    ****   HAL_PWR_EnableBkUpAccess();
  67:Src/main.c    ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
  68:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
  69:Src/main.c    ****   */
  70:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
  71:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
  72:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
  73:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
  74:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
  75:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  76:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
  77:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
  78:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 16;
  79:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
  80:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  81:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
  82:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  83:Src/main.c    ****   {
  84:Src/main.c    ****     Error_Handler();
  85:Src/main.c    ****   }
  86:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
  87:Src/main.c    ****   */
  88:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  89:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 3


  90:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  91:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  92:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  93:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  94:Src/main.c    **** 
  95:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
  96:Src/main.c    ****   {
  97:Src/main.c    ****     Error_Handler();
  98:Src/main.c    ****   }
  99:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_USB;
 100:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 101:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 102:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 103:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 104:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 24;
 105:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 106:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 107:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 108:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
 109:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 110:Src/main.c    ****   {
 111:Src/main.c    ****     Error_Handler();
 112:Src/main.c    ****   }
 113:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 114:Src/main.c    ****   */
 115:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 116:Src/main.c    ****   {
 117:Src/main.c    ****     Error_Handler();
 118:Src/main.c    ****   }
 119:Src/main.c    ****   /** Enable MSI Auto calibration 
 120:Src/main.c    ****   */
 121:Src/main.c    ****   HAL_RCCEx_EnableMSIPLLMode();
 122:Src/main.c    **** }
 123:Src/main.c    **** 
 124:Src/main.c    **** /**
 125:Src/main.c    ****   * @brief USART2 Initialization Function
 126:Src/main.c    ****   * @param None
 127:Src/main.c    ****   * @retval None
 128:Src/main.c    ****   */
 129:Src/main.c    **** static void MX_USART2_UART_Init(void)
 130:Src/main.c    **** {
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 135:Src/main.c    **** 
 136:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 137:Src/main.c    **** 
 138:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 139:Src/main.c    ****   huart2.Instance = USART2;
 140:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 141:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 142:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 143:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 144:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 145:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 146:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 4


 147:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 148:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 149:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 150:Src/main.c    ****   {
 151:Src/main.c    ****     Error_Handler();
 152:Src/main.c    ****   }
 153:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 154:Src/main.c    **** 
 155:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 156:Src/main.c    **** 
 157:Src/main.c    **** }
 158:Src/main.c    **** 
 159:Src/main.c    **** /**
 160:Src/main.c    ****   * @brief GPIO Initialization Function
 161:Src/main.c    ****   * @param None
 162:Src/main.c    ****   * @retval None
 163:Src/main.c    ****   */
 164:Src/main.c    **** static void MX_GPIO_Init(void)
 165:Src/main.c    **** {
  27              		.loc 1 165 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 8AB0     		sub	sp, sp, #40
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 166:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 166 0
  40 0004 0024     		movs	r4, #0
  41 0006 0594     		str	r4, [sp, #20]
  42 0008 0694     		str	r4, [sp, #24]
  43 000a 0794     		str	r4, [sp, #28]
  44 000c 0894     		str	r4, [sp, #32]
  45 000e 0994     		str	r4, [sp, #36]
  46              	.LBB4:
 167:Src/main.c    **** 
 168:Src/main.c    ****   /* GPIO Ports Clock Enable */
 169:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 169 0
  48 0010 204B     		ldr	r3, .L3
  49 0012 DA6C     		ldr	r2, [r3, #76]
  50 0014 42F00402 		orr	r2, r2, #4
  51 0018 DA64     		str	r2, [r3, #76]
  52 001a DA6C     		ldr	r2, [r3, #76]
  53 001c 02F00402 		and	r2, r2, #4
  54 0020 0192     		str	r2, [sp, #4]
  55 0022 019A     		ldr	r2, [sp, #4]
  56              	.LBE4:
  57              	.LBB5:
 170:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  58              		.loc 1 170 0
  59 0024 DA6C     		ldr	r2, [r3, #76]
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 5


  60 0026 42F08002 		orr	r2, r2, #128
  61 002a DA64     		str	r2, [r3, #76]
  62 002c DA6C     		ldr	r2, [r3, #76]
  63 002e 02F08002 		and	r2, r2, #128
  64 0032 0292     		str	r2, [sp, #8]
  65 0034 029A     		ldr	r2, [sp, #8]
  66              	.LBE5:
  67              	.LBB6:
 171:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 171 0
  69 0036 DA6C     		ldr	r2, [r3, #76]
  70 0038 42F00102 		orr	r2, r2, #1
  71 003c DA64     		str	r2, [r3, #76]
  72 003e DA6C     		ldr	r2, [r3, #76]
  73 0040 02F00102 		and	r2, r2, #1
  74 0044 0392     		str	r2, [sp, #12]
  75 0046 039A     		ldr	r2, [sp, #12]
  76              	.LBE6:
  77              	.LBB7:
 172:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  78              		.loc 1 172 0
  79 0048 DA6C     		ldr	r2, [r3, #76]
  80 004a 42F00202 		orr	r2, r2, #2
  81 004e DA64     		str	r2, [r3, #76]
  82 0050 DB6C     		ldr	r3, [r3, #76]
  83 0052 03F00203 		and	r3, r3, #2
  84 0056 0493     		str	r3, [sp, #16]
  85 0058 049B     		ldr	r3, [sp, #16]
  86              	.LBE7:
 173:Src/main.c    **** 
 174:Src/main.c    ****   /*Configure GPIO pin Output Level */
 175:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
  87              		.loc 1 175 0
  88 005a 2246     		mov	r2, r4
  89 005c 2021     		movs	r1, #32
  90 005e 4FF09040 		mov	r0, #1207959552
  91 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
  92              	.LVL0:
 176:Src/main.c    **** 
 177:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 178:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
  93              		.loc 1 178 0
  94 0066 4FF40053 		mov	r3, #8192
  95 006a 0593     		str	r3, [sp, #20]
 179:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
  96              		.loc 1 179 0
  97 006c 0A4B     		ldr	r3, .L3+4
  98 006e 0693     		str	r3, [sp, #24]
 180:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  99              		.loc 1 180 0
 100 0070 0794     		str	r4, [sp, #28]
 181:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 101              		.loc 1 181 0
 102 0072 05A9     		add	r1, sp, #20
 103 0074 0948     		ldr	r0, .L3+8
 104 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 105              	.LVL1:
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 6


 182:Src/main.c    **** 
 183:Src/main.c    ****   /*Configure GPIO pin : LD2_Pin */
 184:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin;
 106              		.loc 1 184 0
 107 007a 2023     		movs	r3, #32
 108 007c 0593     		str	r3, [sp, #20]
 185:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 185 0
 110 007e 0123     		movs	r3, #1
 111 0080 0693     		str	r3, [sp, #24]
 186:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 186 0
 113 0082 0794     		str	r4, [sp, #28]
 187:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 114              		.loc 1 187 0
 115 0084 0894     		str	r4, [sp, #32]
 188:Src/main.c    ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 116              		.loc 1 188 0
 117 0086 05A9     		add	r1, sp, #20
 118 0088 4FF09040 		mov	r0, #1207959552
 119 008c FFF7FEFF 		bl	HAL_GPIO_Init
 120              	.LVL2:
 189:Src/main.c    **** 
 190:Src/main.c    **** }
 121              		.loc 1 190 0
 122 0090 0AB0     		add	sp, sp, #40
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 8
 125              		@ sp needed
 126 0092 10BD     		pop	{r4, pc}
 127              	.L4:
 128              		.align	2
 129              	.L3:
 130 0094 00100240 		.word	1073876992
 131 0098 00002110 		.word	270598144
 132 009c 00080048 		.word	1207961600
 133              		.cfi_endproc
 134              	.LFE136:
 136              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 137              		.align	1
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	MX_USART2_UART_Init:
 144              	.LFB135:
 130:Src/main.c    **** 
 145              		.loc 1 130 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149 0000 08B5     		push	{r3, lr}
 150              	.LCFI3:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 3, -8
 153              		.cfi_offset 14, -4
 139:Src/main.c    ****   huart2.Init.BaudRate = 115200;
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 7


 154              		.loc 1 139 0
 155 0002 0948     		ldr	r0, .L7
 156 0004 094B     		ldr	r3, .L7+4
 157 0006 0360     		str	r3, [r0]
 140:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 158              		.loc 1 140 0
 159 0008 4FF4E133 		mov	r3, #115200
 160 000c 4360     		str	r3, [r0, #4]
 141:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 161              		.loc 1 141 0
 162 000e 0023     		movs	r3, #0
 163 0010 8360     		str	r3, [r0, #8]
 142:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 164              		.loc 1 142 0
 165 0012 C360     		str	r3, [r0, #12]
 143:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 166              		.loc 1 143 0
 167 0014 0361     		str	r3, [r0, #16]
 144:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 168              		.loc 1 144 0
 169 0016 0C22     		movs	r2, #12
 170 0018 4261     		str	r2, [r0, #20]
 145:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 171              		.loc 1 145 0
 172 001a 8361     		str	r3, [r0, #24]
 146:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 173              		.loc 1 146 0
 174 001c C361     		str	r3, [r0, #28]
 147:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 175              		.loc 1 147 0
 176 001e 0362     		str	r3, [r0, #32]
 148:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 177              		.loc 1 148 0
 178 0020 4362     		str	r3, [r0, #36]
 149:Src/main.c    ****   {
 179              		.loc 1 149 0
 180 0022 FFF7FEFF 		bl	HAL_UART_Init
 181              	.LVL3:
 157:Src/main.c    **** 
 182              		.loc 1 157 0
 183 0026 08BD     		pop	{r3, pc}
 184              	.L8:
 185              		.align	2
 186              	.L7:
 187 0028 00000000 		.word	huart2
 188 002c 00440040 		.word	1073759232
 189              		.cfi_endproc
 190              	.LFE135:
 192              		.section	.text.SystemClock_Config,"ax",%progbits
 193              		.align	1
 194              		.global	SystemClock_Config
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv4-sp-d16
 200              	SystemClock_Config:
 201              	.LFB134:
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 8


  59:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 202              		.loc 1 59 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 224
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 207              	.LCFI4:
 208              		.cfi_def_cfa_offset 20
 209              		.cfi_offset 4, -20
 210              		.cfi_offset 5, -16
 211              		.cfi_offset 6, -12
 212              		.cfi_offset 7, -8
 213              		.cfi_offset 14, -4
 214 0002 B9B0     		sub	sp, sp, #228
 215              	.LCFI5:
 216              		.cfi_def_cfa_offset 248
  60:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 217              		.loc 1 60 0
 218 0004 4422     		movs	r2, #68
 219 0006 0021     		movs	r1, #0
 220 0008 27A8     		add	r0, sp, #156
 221 000a FFF7FEFF 		bl	memset
 222              	.LVL4:
  61:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 223              		.loc 1 61 0
 224 000e 0024     		movs	r4, #0
 225 0010 2294     		str	r4, [sp, #136]
 226 0012 2394     		str	r4, [sp, #140]
 227 0014 2494     		str	r4, [sp, #144]
 228 0016 2594     		str	r4, [sp, #148]
 229 0018 2694     		str	r4, [sp, #152]
  62:Src/main.c    **** 
 230              		.loc 1 62 0
 231 001a 8822     		movs	r2, #136
 232 001c 2146     		mov	r1, r4
 233 001e 6846     		mov	r0, sp
 234 0020 FFF7FEFF 		bl	memset
 235              	.LVL5:
  66:Src/main.c    ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 236              		.loc 1 66 0
 237 0024 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 238              	.LVL6:
  67:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 239              		.loc 1 67 0
 240 0028 214A     		ldr	r2, .L11
 241 002a D2F89030 		ldr	r3, [r2, #144]
 242 002e 23F01803 		bic	r3, r3, #24
 243 0032 C2F89030 		str	r3, [r2, #144]
  70:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 244              		.loc 1 70 0
 245 0036 1423     		movs	r3, #20
 246 0038 2793     		str	r3, [sp, #156]
  71:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 247              		.loc 1 71 0
 248 003a 0125     		movs	r5, #1
 249 003c 2995     		str	r5, [sp, #164]
  72:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 9


 250              		.loc 1 72 0
 251 003e 2D95     		str	r5, [sp, #180]
  73:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 252              		.loc 1 73 0
 253 0040 2E94     		str	r4, [sp, #184]
  74:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 254              		.loc 1 74 0
 255 0042 6023     		movs	r3, #96
 256 0044 2F93     		str	r3, [sp, #188]
  75:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 257              		.loc 1 75 0
 258 0046 0226     		movs	r6, #2
 259 0048 3196     		str	r6, [sp, #196]
  76:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 260              		.loc 1 76 0
 261 004a 3295     		str	r5, [sp, #200]
  77:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 16;
 262              		.loc 1 77 0
 263 004c 3395     		str	r5, [sp, #204]
  78:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 264              		.loc 1 78 0
 265 004e 1023     		movs	r3, #16
 266 0050 3493     		str	r3, [sp, #208]
  79:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 267              		.loc 1 79 0
 268 0052 0727     		movs	r7, #7
 269 0054 3597     		str	r7, [sp, #212]
  80:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 270              		.loc 1 80 0
 271 0056 3696     		str	r6, [sp, #216]
  81:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 272              		.loc 1 81 0
 273 0058 3796     		str	r6, [sp, #220]
  82:Src/main.c    ****   {
 274              		.loc 1 82 0
 275 005a 27A8     		add	r0, sp, #156
 276 005c FFF7FEFF 		bl	HAL_RCC_OscConfig
 277              	.LVL7:
  88:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 278              		.loc 1 88 0
 279 0060 0F23     		movs	r3, #15
 280 0062 2293     		str	r3, [sp, #136]
  90:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 281              		.loc 1 90 0
 282 0064 0323     		movs	r3, #3
 283 0066 2393     		str	r3, [sp, #140]
  91:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 284              		.loc 1 91 0
 285 0068 2494     		str	r4, [sp, #144]
  92:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 286              		.loc 1 92 0
 287 006a 2594     		str	r4, [sp, #148]
  93:Src/main.c    **** 
 288              		.loc 1 93 0
 289 006c 2694     		str	r4, [sp, #152]
  95:Src/main.c    ****   {
 290              		.loc 1 95 0
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 10


 291 006e 2946     		mov	r1, r5
 292 0070 22A8     		add	r0, sp, #136
 293 0072 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 294              	.LVL8:
  99:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 295              		.loc 1 99 0
 296 0076 42F20203 		movw	r3, #8194
 297 007a 0093     		str	r3, [sp]
 100:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 298              		.loc 1 100 0
 299 007c 0F94     		str	r4, [sp, #60]
 101:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 300              		.loc 1 101 0
 301 007e 4FF08063 		mov	r3, #67108864
 302 0082 1B93     		str	r3, [sp, #108]
 102:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 303              		.loc 1 102 0
 304 0084 0195     		str	r5, [sp, #4]
 103:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 24;
 305              		.loc 1 103 0
 306 0086 0295     		str	r5, [sp, #8]
 104:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 307              		.loc 1 104 0
 308 0088 1823     		movs	r3, #24
 309 008a 0393     		str	r3, [sp, #12]
 105:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 310              		.loc 1 105 0
 311 008c 0497     		str	r7, [sp, #16]
 106:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 312              		.loc 1 106 0
 313 008e 0596     		str	r6, [sp, #20]
 107:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
 314              		.loc 1 107 0
 315 0090 0696     		str	r6, [sp, #24]
 108:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 316              		.loc 1 108 0
 317 0092 4FF48013 		mov	r3, #1048576
 318 0096 0793     		str	r3, [sp, #28]
 109:Src/main.c    ****   {
 319              		.loc 1 109 0
 320 0098 6846     		mov	r0, sp
 321 009a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 322              	.LVL9:
 115:Src/main.c    ****   {
 323              		.loc 1 115 0
 324 009e 4FF40070 		mov	r0, #512
 325 00a2 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 326              	.LVL10:
 121:Src/main.c    **** }
 327              		.loc 1 121 0
 328 00a6 FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 329              	.LVL11:
 122:Src/main.c    **** 
 330              		.loc 1 122 0
 331 00aa 39B0     		add	sp, sp, #228
 332              	.LCFI6:
 333              		.cfi_def_cfa_offset 20
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 11


 334              		@ sp needed
 335 00ac F0BD     		pop	{r4, r5, r6, r7, pc}
 336              	.L12:
 337 00ae 00BF     		.align	2
 338              	.L11:
 339 00b0 00100240 		.word	1073876992
 340              		.cfi_endproc
 341              	.LFE134:
 343              		.section	.text.main,"ax",%progbits
 344              		.align	1
 345              		.global	main
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 349              		.fpu fpv4-sp-d16
 351              	main:
 352              	.LFB133:
  39:Src/main.c    ****   HAL_Init();
 353              		.loc 1 39 0
 354              		.cfi_startproc
 355              		@ Volatile: function does not return.
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 08B5     		push	{r3, lr}
 359              	.LCFI7:
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 3, -8
 362              		.cfi_offset 14, -4
  40:Src/main.c    ****   SystemClock_Config();
 363              		.loc 1 40 0
 364 0002 FFF7FEFF 		bl	HAL_Init
 365              	.LVL12:
  41:Src/main.c    ****   MX_GPIO_Init();
 366              		.loc 1 41 0
 367 0006 FFF7FEFF 		bl	SystemClock_Config
 368              	.LVL13:
  42:Src/main.c    ****   MX_USART2_UART_Init();
 369              		.loc 1 42 0
 370 000a FFF7FEFF 		bl	MX_GPIO_Init
 371              	.LVL14:
  43:Src/main.c    ****   MX_USB_DEVICE_Init();
 372              		.loc 1 43 0
 373 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 374              	.LVL15:
  44:Src/main.c    **** 
 375              		.loc 1 44 0
 376 0012 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 377              	.LVL16:
  46:Src/main.c    ****   __enable_irq();
 378              		.loc 1 46 0
 379 0016 034B     		ldr	r3, .L16
 380 0018 4FF00062 		mov	r2, #134217728
 381 001c 9A60     		str	r2, [r3, #8]
 382              	.LBB8:
 383              	.LBB9:
 384              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 12


   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 13


  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 14


 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 385              		.loc 2 131 0
 386              		.syntax unified
 387              	@ 131 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 388 001e 62B6     		cpsie i
 389              	@ 0 "" 2
 390              		.thumb
 391              		.syntax unified
 392              	.L14:
 393 0020 FEE7     		b	.L14
 394              	.L17:
 395 0022 00BF     		.align	2
 396              	.L16:
 397 0024 00ED00E0 		.word	-536810240
 398              	.LBE9:
 399              	.LBE8:
 400              		.cfi_endproc
 401              	.LFE133:
 403              		.section	.text.Error_Handler,"ax",%progbits
 404              		.align	1
 405              		.global	Error_Handler
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu fpv4-sp-d16
 411              	Error_Handler:
 412              	.LFB137:
 191:Src/main.c    **** 
 192:Src/main.c    **** /* USER CODE BEGIN 4 */
 193:Src/main.c    **** 
 194:Src/main.c    **** /* USER CODE END 4 */
 195:Src/main.c    **** 
 196:Src/main.c    **** /**
 197:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 198:Src/main.c    ****   * @retval None
 199:Src/main.c    ****   */
 200:Src/main.c    **** void Error_Handler(void)
 201:Src/main.c    **** {
 413              		.loc 1 201 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 15


 417              		@ link register save eliminated.
 202:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 203:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 204:Src/main.c    **** 
 205:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 206:Src/main.c    **** }
 418              		.loc 1 206 0
 419 0000 7047     		bx	lr
 420              		.cfi_endproc
 421              	.LFE137:
 423              		.comm	huart2,128,4
 424              		.text
 425              	.Letext0:
 426              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 427              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 428              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 429              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 430              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 431              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 432              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 433              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 434              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 435              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 436              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 437              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 438              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 439              		.file 16 "Inc/main.h"
 440              		.file 17 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 441              		.file 18 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 442              		.file 19 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 443              		.file 20 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 444              		.file 21 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 445              		.file 22 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 446              		.file 23 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 447              		.file 24 "Inc/usb_device.h"
 448              		.file 25 "<built-in>"
ARM GAS  /var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s:18     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s:130    .text.MX_GPIO_Init:0000000000000094 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s:137    .text.MX_USART2_UART_Init:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s:143    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s:187    .text.MX_USART2_UART_Init:0000000000000028 $d
                            *COM*:0000000000000080 huart2
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s:193    .text.SystemClock_Config:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s:200    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s:339    .text.SystemClock_Config:00000000000000b0 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s:344    .text.main:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s:351    .text.main:0000000000000000 main
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s:397    .text.main:0000000000000024 $d
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s:404    .text.Error_Handler:0000000000000000 $t
/var/folders/k_/d4dbklhx7q1fs9lh20k9kt840000gn/T//cc0xhtJH.s:411    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_RCCEx_EnableMSIPLLMode
HAL_Init
MX_USB_DEVICE_Init
